/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --tw-font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --tw-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --tw-spacing: 0.25rem;
    --tw-container-xs: 20rem;
    --tw-text-2xl: 1.5rem;
    --tw-text-2xl--line-height: calc(2 / 1.5);
    --tw-default-font-family: var(--tw-font-sans);
    --tw-default-mono-font-family: var(--tw-font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--tw-default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--tw-default-font-feature-settings, normal);
    font-variation-settings: var(--tw-default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--tw-default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--tw-default-mono-font-feature-settings, normal);
    font-variation-settings: var(--tw-default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .tw\:dui-diff {
    position: relative;
    display: grid;
    width: 100%;
    overflow: hidden;
    webkit-user-select: none;
    user-select: none;
    direction: ltr;
    container-type: inline-size;
    grid-template-columns: auto 1fr;
    &:focus-visible, &:has(.tw\:dui-diff-item-1:focus-visible) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
    }
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
      .tw\:dui-diff-resizer {
        min-width: 90cqi;
        max-width: 90cqi;
      }
    }
    &:has(.tw\:dui-diff-item-2:focus-visible) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      .tw\:dui-diff-resizer {
        min-width: 10cqi;
        max-width: 10cqi;
      }
    }
    @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
      &:focus {
        .tw\:dui-diff-resizer {
          min-width: 10cqi;
          max-width: 10cqi;
        }
      }
      &:has(.tw\:dui-diff-item-1:focus) {
        .tw\:dui-diff-resizer {
          min-width: 90cqi;
          max-width: 90cqi;
        }
      }
    }
  }
  .tw\:dui-modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
    &::backdrop {
      display: none;
    }
    &.tw\:dui-modal-open, &[open], &:target {
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      background-color: oklch(0% 0 0/ 0.4);
      .tw\:dui-modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
    @starting-style {
      &.tw\:dui-modal-open, &[open], &:target {
        visibility: hidden;
        opacity: 0%;
      }
    }
  }
  .tw\:dui-drawer-side {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 0);
    z-index: 1;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-x: hidden;
    overflow-y: hidden;
    overscroll-behavior: contain;
    opacity: 0%;
    transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
    height: 100vh;
    height: 100dvh;
     > .tw\:dui-drawer-overlay {
      position: sticky;
      top: calc(0.25rem * 0);
      cursor: pointer;
      place-self: stretch;
      background-color: oklch(0% 0 0 / 40%);
    }
     > * {
      grid-column-start: 1;
      grid-row-start: 1;
    }
     > *:not(.tw\:dui-drawer-overlay) {
      will-change: transform;
      transition: translate 0.3s ease-out;
      translate: -100%;
      [dir="rtl"] & {
        translate: 100%;
      }
    }
  }
  .tw\:dui-drawer-open {
     > .tw\:dui-drawer-side {
      overflow-y: auto;
    }
     > .tw\:dui-drawer-toggle {
      display: none;
      & ~ .tw\:dui-drawer-side {
        pointer-events: auto;
        visibility: visible;
        position: sticky;
        display: block;
        width: auto;
        overscroll-behavior: auto;
        opacity: 100%;
        & > .tw\:dui-drawer-overlay {
          cursor: default;
          background-color: transparent;
        }
        & > *:not(.tw\:dui-drawer-overlay) {
          translate: 0%;
          [dir="rtl"] & {
            translate: 0%;
          }
        }
      }
      &:checked ~ .tw\:dui-drawer-side {
        pointer-events: auto;
        visibility: visible;
      }
    }
  }
  .tw\:dui-modal-toggle {
    position: fixed;
    height: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    appearance: none;
    opacity: 0%;
    &:checked + .tw\:dui-modal {
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      background-color: oklch(0% 0 0/ 0.4);
      .tw\:dui-modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
    @starting-style {
      &:checked + .tw\:dui-modal {
        visibility: hidden;
        opacity: 0%;
      }
    }
  }
  .tw\:dui-drawer-toggle {
    position: fixed;
    height: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    appearance: none;
    opacity: 0%;
    &:checked {
      & ~ .tw\:dui-drawer-side {
        pointer-events: auto;
        visibility: visible;
        overflow-y: auto;
        opacity: 100%;
        & > *:not(.tw\:dui-drawer-overlay) {
          translate: 0%;
        }
      }
    }
    &:focus-visible ~ .tw\:dui-drawer-content label.tw\:dui-drawer-button {
      outline: 2px solid;
      outline-offset: 2px;
    }
  }
  .tw\:dui-tooltip {
    position: relative;
    display: inline-block;
    --dui-tt-bg: var(--color-neutral);
    --dui-tt-off: calc(100% + 0.5rem);
    --dui-tt-tail: calc(100% + 1px + 0.25rem);
    > :where(.tw\:dui-tooltip-content), &:where([data-tip]):before {
      position: absolute;
      max-width: 20rem;
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
      text-align: center;
      white-space: normal;
      color: var(--color-neutral-content);
      opacity: 0%;
      font-size: 0.875rem;
      line-height: 1.25;
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      background-color: var(--dui-tt-bg);
      width: max-content;
      pointer-events: none;
      z-index: 2;
      --tw-content: attr(data-tip);
      content: var(--tw-content);
    }
    &:after {
      position: absolute;
      position: absolute;
      opacity: 0%;
      background-color: var(--dui-tt-bg);
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      content: "";
      pointer-events: none;
      width: 0.625rem;
      height: 0.25rem;
      display: block;
      mask-repeat: no-repeat;
      mask-position: -1px 0;
      --dui-mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
      mask-image: var(--dui-mask-tooltip);
    }
    &.tw\:dui-tooltip-open, &[data-tip]:not([data-tip=""]):hover, &:not(:has(.tw\:dui-tooltip-content:empty)):has(.tw\:dui-tooltip-content):hover, &:has(:focus-visible) {
      > .tw\:dui-tooltip-content, &[data-tip]:before, &:after {
        opacity: 100%;
        --dui-tt-pos: 0rem;
        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      }
    }
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, 0.25rem));
      inset: auto auto var(--dui-tt-off) 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, 0.25rem));
      inset: auto auto var(--dui-tt-tail) 50%;
    }
  }
  .tw\:dui-tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    --dui-tab-p: 1rem;
    --dui-tab-bg: var(--color-base-100);
    --dui-tab-border-color: var(--color-base-300);
    --dui-tab-radius-ss: 0;
    --dui-tab-radius-se: 0;
    --dui-tab-radius-es: 0;
    --dui-tab-radius-ee: 0;
    --dui-tab-order: 0;
    --dui-tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--dui-tab-order);
    height: var(--dui-tab-height);
    font-size: 0.875rem;
    padding-inline-start: var(--dui-tab-p);
    padding-inline-end: var(--dui-tab-p);
    &:is(input[type="radio"]) {
      min-width: fit-content;
      &:after {
        content: attr(aria-label);
      }
    }
    &:is(label) {
      position: relative;
      input {
        position: absolute;
        inset: calc(0.25rem * 0);
        cursor: pointer;
        appearance: none;
        opacity: 0%;
      }
    }
    &:checked, &:is(label:has(:checked)), &:is(.tw\:dui-tab-active, [aria-selected="true"]) {
      & + .tw\:dui-tab-content {
        display: block;
        height: calc(100% - var(--dui-tab-height) + var(--border));
      }
    }
    &:not(:checked, label:has(:checked), :hover, .tw\:dui-tab-active, [aria-selected="true"]) {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:not(input):empty {
      flex-grow: 1;
      cursor: default;
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible, &:is(label:has(:checked:focus-visible)) {
      outline: 2px solid currentColor;
      outline-offset: -5px;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .tw\:dui-menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --dui-menu-active-fg: var(--color-neutral-content);
    --dui-menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .tw\:dui-menu-dropdown:not(.tw\:dui-menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title, .tw\:dui-btn)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .tw\:dui-menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .tw\:dui-menu-dropdown-toggle.tw\:dui-menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.tw\:dui-menu-title, .tw\:dui-disabled) > *:not(ul, details, .tw\:dui-menu-title), li:not(.tw\:dui-menu-title, .tw\:dui-disabled) > details > summary:not(.tw\:dui-menu-title) ):not(.tw\:dui-menu-active, :active, .tw\:dui-btn) {
      &.tw\:dui-menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.tw\:dui-menu-title, .tw\:dui-disabled) > *:not(ul, details, .tw\:dui-menu-title):not(.tw\:dui-menu-active, :active, .tw\:dui-btn):hover, li:not(.tw\:dui-menu-title, .tw\:dui-disabled) > details > summary:not(.tw\:dui-menu-title):not(.tw\:dui-menu-active, :active, .tw\:dui-btn):hover ) {
      cursor: pointer;
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .tw\:dui-badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .tw\:dui-menu-title, details, .tw\:dui-btn):active, & > *:not(ul, .tw\:dui-menu-title, details, .tw\:dui-btn).tw\:dui-menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--dui-menu-active-fg);
        background-color: var(--dui-menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--dui-fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--dui-menu-active-bg);
        }
      }
      &.tw\:dui-menu-disabled {
        pointer-events: none;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    .tw\:dui-dropdown:focus-within {
      .tw\:dui-menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .tw\:dui-dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .tw\:dui-floating-label {
    position: relative;
    display: block;
    input {
      display: block;
      &::placeholder {
        transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
      }
    }
    textarea {
      &::placeholder {
        transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
      }
    }
     > span {
      position: absolute;
      inset-inline-start: calc(0.25rem * 3);
      z-index: 1;
      background-color: var(--color-base-100);
      padding-inline: calc(0.25rem * 1);
      opacity: 0%;
      font-size: 0.875rem;
      top: calc(var(--size-field, 0.25rem) * 10 / 2);
      line-height: 1;
      border-radius: 2px;
      pointer-events: none;
      translate: 0 -50%;
      transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
    }
    &:focus-within, &:not(:has(input:placeholder-shown, textarea:placeholder-shown)) {
      ::placeholder {
        opacity: 0%;
        top: 0;
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
        pointer-events: auto;
      }
       > span {
        opacity: 100%;
        top: 0;
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
        pointer-events: auto;
        z-index: 2;
      }
    }
    &:has(:disabled, [disabled]) {
       > span {
        opacity: 0%;
      }
    }
    &:has(.tw\:dui-input-xs, .tw\:dui-select-xs, .tw\:dui-textarea-xs) span {
      font-size: 0.6875rem;
      top: calc(var(--size-field, 0.25rem) * 6 / 2);
    }
    &:has(.tw\:dui-input-sm, .tw\:dui-select-sm, .tw\:dui-textarea-sm) span {
      font-size: 0.75rem;
      top: calc(var(--size-field, 0.25rem) * 8 / 2);
    }
    &:has(.tw\:dui-input-md, .tw\:dui-select-md, .tw\:dui-textarea-md) span {
      font-size: 0.875rem;
      top: calc(var(--size-field, 0.25rem) * 10 / 2);
    }
    &:has(.tw\:dui-input-lg, .tw\:dui-select-lg, .tw\:dui-textarea-lg) span {
      font-size: 1.125rem;
      top: calc(var(--size-field, 0.25rem) * 12 / 2);
    }
    &:has(.tw\:dui-input-xl, .tw\:dui-select-xl, .tw\:dui-textarea-xl) span {
      font-size: 1.375rem;
      top: calc(var(--size-field, 0.25rem) * 14 / 2);
    }
  }
  .tw\:dui-collapse-arrow {
     > .tw\:dui-collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transform: translateY(-100%) rotate(45deg);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 0.2s;
      top: 1.9rem;
      inset-inline-end: 1.4rem;
      content: "";
      transform-origin: 75% 75%;
      box-shadow: 2px 2px;
      pointer-events: none;
    }
  }
  .tw\:dui-collapse-plus {
     > .tw\:dui-collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transition-property: all;
      transition-duration: 300ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      top: 0.9rem;
      inset-inline-end: 1.4rem;
      content: "+";
      pointer-events: none;
    }
  }
  .tw\:dui-diff-item-2 {
    position: relative;
    grid-column-start: 1;
    grid-row-start: 1;
    &:after {
      pointer-events: none;
      position: absolute;
      top: calc(1/2 * 100%);
      right: 1px;
      bottom: calc(0.25rem * 0);
      z-index: 2;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-100) 50%, transparent);
      }
      width: 1.2rem;
      height: 1.8rem;
      border: 2px solid var(--color-base-100);
      content: "";
      outline: 1px solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        outline: 1px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
      }
      outline-offset: -3px;
      backdrop-filter: blur(8px);
      box-shadow: 0 1px 2px 0 oklch(0% 0 0 / 0.1);
      translate: 50% -50%;
    }
     > * {
      pointer-events: none;
      position: absolute;
      top: calc(0.25rem * 0);
      bottom: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      height: 100%;
      width: 100cqi;
      max-width: none;
      object-fit: cover;
      object-position: center;
    }
    @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
      &:after {
        content: none;
      }
    }
  }
  .tw\:dui-pika-single {
    &:is(div) {
      user-select: none;
      font-size: 0.75rem;
      z-index: 999;
      display: inline-block;
      position: relative;
      color: var(--color-base-content);
      background-color: var(--color-base-100);
      border-radius: var(--radius-box);
      border: var(--border) solid var(--color-base-200);
      padding: 0.5rem;
      &:before, &:after {
        content: "";
        display: table;
      }
      &:after {
        clear: both;
      }
      &.tw\:dui-is-hidden {
        display: none;
      }
      &.tw\:dui-is-bound {
        position: absolute;
      }
      .tw\:dui-pika-lendar {
        css-float: left;
      }
      .tw\:dui-pika-title {
        position: relative;
        text-align: center;
        select {
          cursor: pointer;
          position: absolute;
          z-index: 999;
          margin: 0;
          left: 0;
          top: 5px;
          opacity: 0;
        }
      }
      .tw\:dui-pika-label {
        display: inline-block;
        position: relative;
        z-index: 999;
        overflow: hidden;
        margin: 0;
        padding: 5px 3px;
        background-color: var(--color-base-100);
      }
      .tw\:dui-pika-prev, .tw\:dui-pika-next {
        display: block;
        cursor: pointer;
        position: absolute;
        top: 0;
        outline: none;
        border: 0;
        width: 2.25rem;
        height: 2.25rem;
        color: #0000;
        font-size: 1.2em;
        border-radius: var(--radius-field);
        &:hover {
          background-color: var(--color-base-200);
        }
        &.tw\:dui-is-disabled {
          cursor: default;
          opacity: 0.2;
        }
        &:before {
          display: inline-block;
          width: 2.25rem;
          height: 2.25rem;
          line-height: 2.25;
          color: var(--color-base-content);
        }
      }
      .tw\:dui-pika-prev {
        left: 0;
        &:before {
          content: "‹";
        }
      }
      .tw\:dui-pika-next {
        right: 0;
        &:before {
          content: "›";
        }
      }
      .tw\:dui-pika-select {
        display: inline-block;
      }
      .tw\:dui-pika-table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        border: 0;
        th, td {
          padding: 0;
        }
        th {
          opacity: 0.6;
          text-align: center;
          width: 2.25rem;
          height: 2.25rem;
        }
      }
      .tw\:dui-pika-button {
        cursor: pointer;
        display: block;
        outline: none;
        border: 0;
        margin: 0;
        width: 2.25rem;
        height: 2.25rem;
        padding: 5px;
        text-align: right;
        text-align: center;
      }
      .tw\:dui-pika-week {
        color: var(--color-base-content);
      }
      .tw\:dui-is-today {
        .tw\:dui-pika-button {
          background: var(--color-primary);
          color: var(--color-primary-content);
        }
      }
      .tw\:dui-is-selected, .tw\:dui-has-event {
        .tw\:dui-pika-button {
          &, &:hover {
            color: var(--color-base-100);
            background-color: var(--color-base-content);
            border-radius: var(--radius-field);
          }
        }
      }
      .tw\:dui-has-event {
        .tw\:dui-pika-button {
          background: var(--color-base-primary);
        }
      }
      .tw\:dui-is-disabled, .tw\:dui-is-inrange {
        .tw\:dui-pika-button {
          background: var(--color-base-primary);
        }
      }
      .tw\:dui-is-startrange {
        .tw\:dui-pika-button {
          color: var(--color-base-100);
          background: var(--color-base-content);
          border-radius: var(--radius-field);
        }
      }
      .tw\:dui-is-endrange {
        .tw\:dui-pika-button {
          color: var(--color-base-100);
          background: var(--color-base-content);
          border-radius: var(--radius-field);
        }
      }
      .tw\:dui-is-disabled {
        .tw\:dui-pika-button {
          pointer-events: none;
          cursor: default;
          color: var(--color-base-content);
          opacity: 0.3;
        }
      }
      .tw\:dui-is-outside-current-month {
        .tw\:dui-pika-button {
          color: var(--color-base-content);
          opacity: 0.3;
        }
      }
      .tw\:dui-is-selection-disabled {
        pointer-events: none;
        cursor: default;
      }
      .tw\:dui-pika-button:hover, .tw\:dui-pika-row.tw\:pick-whole-week:hover .tw\:dui-pika-button {
        color: var(--color-base-content);
        background-color: var(--color-base-200);
        border-radius: var(--radius-field);
      }
      .tw\:dui-pika-table abbr {
        text-decoration: none;
        font-weight: normal;
      }
    }
  }
  .tw\:dui-diff-item-1 {
    position: relative;
    z-index: 1;
    grid-column-start: 1;
    grid-row-start: 1;
    overflow: hidden;
    border-right: 2px solid var(--color-base-100);
     > * {
      pointer-events: none;
      position: absolute;
      top: calc(0.25rem * 0);
      bottom: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      height: 100%;
      width: 100cqi;
      max-width: none;
      object-fit: cover;
      object-position: center;
    }
  }
  .tw\:dui-dock {
    position: fixed;
    right: calc(0.25rem * 0);
    bottom: calc(0.25rem * 0);
    left: calc(0.25rem * 0);
    z-index: 1;
    display: flex;
    width: 100%;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    color: currentColor;
    border-top: 0.5px solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
    }
    height: 4rem;
    height: calc(4rem + env(safe-area-inset-bottom));
    padding-bottom: env(safe-area-inset-bottom);
     > * {
      position: relative;
      margin-bottom: calc(0.25rem * 2);
      display: flex;
      height: 100%;
      max-width: calc(0.25rem * 32);
      flex-shrink: 1;
      flex-basis: 100%;
      cursor: pointer;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 1px;
      border-radius: var(--radius-box);
      background-color: transparent;
      transition: opacity 0.2s ease-out;
      @media (hover: hover) {
        &:hover {
          opacity: 80%;
        }
      }
      &[aria-disabled="true"], &[disabled] {
        &, &:hover {
          pointer-events: none;
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          opacity: 100%;
        }
      }
      .tw\:dui-dock-label {
        font-size: 0.6875rem;
      }
      &:after {
        content: "";
        position: absolute;
        height: calc(0.25rem * 1);
        width: calc(0.25rem * 6);
        border-radius: calc(infinity * 1px);
        background-color: transparent;
        bottom: 0.2rem;
        border-top: 3px solid transparent;
        transition: background-color 0.1s ease-out, text-color 0.1s ease-out, width 0.1s ease-out;
      }
    }
  }
  .tw\:dui-dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--dui-anchor-v, bottom) var(--dui-anchor-h, span-right);
    & > *:not(summary):focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .tw\:dui-dropdown-content {
      position: absolute;
    }
    &:not(details, .tw\:dui-dropdown-open, .tw\:dui-dropdown-hover:hover, :focus-within) {
      .tw\:dui-dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .tw\:dui-dropdown-content {
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @starting-style {
      &[popover], .tw\:dui-dropdown-content {
        scale: 95%;
        opacity: 0;
      }
    }
    &.tw\:dui-dropdown-open, &:not(.tw\:dui-dropdown-hover):focus, &:focus-within {
       > [tabindex]:first-child {
        pointer-events: none;
      }
      .tw\:dui-dropdown-content {
        opacity: 100%;
      }
    }
    &.tw\:dui-dropdown-hover:hover {
      .tw\:dui-dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.tw\:dui-dropdown-open, &:focus, &:focus-within {
      .tw\:dui-dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.tw\:dui-dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.tw\:dui-dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .tw\:dui-btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--dui-btn-p);
    color: var(--dui-btn-fg);
    --tw-prose-links: var(--dui-btn-fg);
    height: var(--dui-size);
    font-size: var(--dui-fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--dui-btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--dui-join-ss, var(--radius-field));
    border-start-end-radius: var(--dui-join-se, var(--radius-field));
    border-end-start-radius: var(--dui-join-es, var(--radius-field));
    border-end-end-radius: var(--dui-join-ee, var(--radius-field));
    background-color: var(--dui-btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--dui-btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--dui-btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--dui-btn-shadow);
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    --dui-btn-bg: var(--dui-btn-color, var(--color-base-200));
    --dui-btn-fg: var(--color-base-content);
    --dui-btn-p: 1rem;
    --dui-btn-border: var(--dui-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-btn-border: color-mix(in oklab, var(--dui-btn-bg), #000 calc(var(--depth) * 5%));
    }
    --dui-btn-shadow: 0 3px 2px -2px var(--dui-btn-bg),
    0 4px 3px -2px var(--dui-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--dui-btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--dui-btn-bg) calc(var(--depth) * 30%), #0000);
    }
    --dui-btn-noise: var(--dui-fx-noise);
    .tw\:dui-prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --dui-btn-bg: var(--dui-btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --dui-btn-bg: color-mix(in oklab, var(--dui-btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible {
      outline-width: 2px;
      outline-style: solid;
      isolation: isolate;
    }
    &:active:not(.tw\:dui-btn-active) {
      translate: 0 0.5px;
      --dui-btn-bg: var(--dui-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-bg: color-mix(in oklab, var(--dui-btn-color, var(--color-base-200)), #000 5%);
      }
      --dui-btn-border: var(--dui-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-border: color-mix(in oklab, var(--dui-btn-color, var(--color-base-200)), #000 7%);
      }
      --dui-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .tw\:dui-btn-disabled) {
      &:not(.tw\:dui-btn-link, .tw\:dui-btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --dui-btn-border: #0000;
      --dui-btn-noise: none;
      --dui-btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --dui-btn-border: #0000;
          --dui-btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --dui-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.tw\:dui-filter .tw\:dui-btn)) {
      --dui-btn-color: var(--color-primary);
      --dui-btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .tw\:dui-loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .tw\:dui-tab-disabled {
    pointer-events: none;
    opacity: 40%;
  }
  .tw\:dui-react-day-picker {
    user-select: none;
    background-color: var(--color-base-100);
    border-radius: var(--radius-box);
    border: var(--border) solid var(--color-base-200);
    font-size: 0.75rem;
    display: inline-block;
    position: relative;
    overflow: clip;
    &[dir="rtl"] {
      .tw\:dui-rdp-nav {
        .tw\:dui-rdp-chevron {
          transform-origin: 50%;
          transform: rotate(180deg);
        }
      }
    }
    * {
      box-sizing: border-box;
    }
    .tw\:dui-rdp-day {
      width: 2.25rem;
      height: 2.25rem;
      text-align: center;
    }
    .tw\:dui-rdp-day_button {
      cursor: pointer;
      font: inherit;
      color: inherit;
      width: 2.25rem;
      height: 2.25rem;
      border: 2px solid #0000;
      border-radius: var(--radius-field);
      background: 0 0;
      justify-content: center;
      align-items: center;
      margin: 0;
      padding: 0;
      display: flex;
      &:disabled {
        cursor: revert;
      }
      &:hover {
        background-color: var(--color-base-200);
      }
    }
    .tw\:dui-rdp-caption_label {
      z-index: 1;
      white-space: nowrap;
      border: 0;
      align-items: center;
      display: inline-flex;
      position: relative;
    }
    .tw\:dui-rdp-button_next {
      border-radius: var(--radius-field);
      &:hover {
        background-color: var(--color-base-200);
      }
    }
    .tw\:dui-rdp-button_previous {
      border-radius: var(--radius-field);
      &:hover {
        background-color: var(--color-base-200);
      }
    }
    .tw\:dui-rdp-button_next, .tw\:dui-rdp-button_previous {
      cursor: pointer;
      font: inherit;
      color: inherit;
      appearance: none;
      width: 2.25rem;
      height: 2.25rem;
      background: 0 0;
      border: none;
      justify-content: center;
      align-items: center;
      margin: 0;
      padding: 0;
      display: inline-flex;
      position: relative;
      &:disabled {
        cursor: revert;
        opacity: 0.5;
      }
    }
    .tw\:dui-rdp-chevron {
      fill: var(--color-base-content);
      width: 1rem;
      height: 1rem;
      display: inline-block;
    }
    .tw\:dui-rdp-dropdowns {
      align-items: center;
      gap: 0.5rem;
      display: inline-flex;
      position: relative;
    }
    .tw\:dui-rdp-dropdown {
      z-index: 2;
      opacity: 0;
      appearance: none;
      cursor: inherit;
      line-height: inherit;
      border: none;
      width: 100%;
      margin: 0;
      padding: 0;
      position: absolute;
      inset-block: 0;
      inset-inline-start: 0;
      &:focus-visible {
         ~ .tw\:dui-rdp-caption_label {
          outline: 5px auto highlight;
          outline: 5px auto -webkit-focus-ring-color;
        }
      }
    }
    .tw\:dui-rdp-dropdown_root {
      align-items: center;
      display: inline-flex;
      position: relative;
      &[data-disabled="true"] {
        .tw\:dui-rdp-chevron {
          opacity: 0.5;
        }
      }
    }
    .tw\:dui-rdp-month_caption {
      height: 2.75rem;
      font-size: 0.75rem;
      font-weight: inherit;
      place-content: center;
      display: flex;
    }
    .tw\:dui-rdp-months {
      gap: 2rem;
      flex-wrap: wrap;
      max-width: fit-content;
      padding: 0.5rem;
      display: flex;
      position: relative;
    }
    .tw\:dui-rdp-month_grid {
      border-collapse: collapse;
    }
    .tw\:dui-rdp-nav {
      height: 2.75rem;
      inset-block-start: 0;
      inset-inline-end: 0;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      padding-inline: 0.5rem;
      display: flex;
      position: absolute;
      top: 0.25rem;
    }
    .tw\:dui-rdp-weekday {
      opacity: 0.6;
      padding: 0.5rem 0rem;
      text-align: center;
      font-size: smaller;
      font-weight: 500;
    }
    .tw\:dui-rdp-week_number {
      opacity: 0.6;
      height: 2.25rem;
      width: 2.25rem;
      border: none;
      border-radius: 100%;
      text-align: center;
      font-size: small;
      font-weight: 400;
    }
    .tw\:dui-rdp-today:not(.tw\:dui-rdp-outside) {
      .tw\:dui-rdp-day_button {
        background: var(--color-primary);
        color: var(--color-primary-content);
      }
    }
    .tw\:dui-rdp-selected {
      font-weight: inherit;
      font-size: 0.75rem;
      .tw\:dui-rdp-day_button {
        color: var(--color-base-100);
        background-color: var(--color-base-content);
        border-radius: var(--radius-field);
        border: none;
        &:hover {
          background-color: var(--color-base-content);
        }
      }
    }
    .tw\:dui-rdp-outside {
      opacity: 0.75;
    }
    .tw\:dui-rdp-disabled {
      opacity: 0.5;
    }
    .tw\:dui-rdp-hidden {
      visibility: hidden;
      color: var(--color-base-content);
    }
    .tw\:dui-rdp-range_start {
      .tw\:dui-rdp-day_button {
        border-radius: var(--radius-field) 0 0 var(--radius-field);
      }
    }
    .tw\:dui-rdp-range_start .tw\:dui-rdp-day_button {
      background-color: var(--color-base-content);
      color: var(--color-base-100);
    }
    .tw\:dui-rdp-range_middle {
      background-color: var(--color-base-200);
    }
    .tw\:dui-rdp-range_middle .tw\:dui-rdp-day_button {
      border: unset;
      border-radius: unset;
      color: inherit;
    }
    .tw\:dui-rdp-range_end {
      color: var(--color-base-content);
      .tw\:dui-rdp-day_button {
        border-radius: 0 var(--radius-field) var(--radius-field) 0;
      }
    }
    .tw\:dui-rdp-range_end .tw\:dui-rdp-day_button {
      background-color: var(--color-base-content);
      color: var(--color-base-100);
    }
    .tw\:dui-rdp-range_start.tw\:dui-rdp-range_end {
      background: revert;
    }
    .tw\:dui-rdp-focusable {
      cursor: pointer;
    }
    .tw\:dui-rdp-footer {
      border-top: var(--border) solid var(--color-base-200);
      padding: 0.5rem;
    }
  }
  .tw\:dui-collapse {
    &:not(td, tr, colgroup) {
      visibility: visible;
    }
    position: relative;
    display: grid;
    overflow: hidden;
    border-radius: var(--radius-box, 1rem);
    width: 100%;
    grid-template-rows: max-content 0fr;
    transition: grid-template-rows 0.2s;
    isolation: isolate;
    > input:is([type="checkbox"], [type="radio"]) {
      grid-column-start: 1;
      grid-row-start: 1;
      appearance: none;
      opacity: 0;
      z-index: 1;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 1lh;
      transition: background-color 0.2s ease-out;
    }
    &:is([open], :focus:not(.tw\:dui-collapse-close)), &:not(.tw\:dui-collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
      grid-template-rows: max-content 1fr;
    }
    &:is([open], :focus:not(.tw\:dui-collapse-close)) > .tw\:dui-collapse-content, &:not(.tw\:dui-collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .tw\:dui-collapse-content) {
      visibility: visible;
      min-height: fit-content;
    }
    &:focus-visible, &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
      outline-color: var(--color-base-content);
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
    }
    &:not(.tw\:dui-collapse-close) {
      > input[type="checkbox"], > input[type="radio"]:not(:checked), > .tw\:dui-collapse-title {
        cursor: pointer;
      }
    }
    &:focus:not(.tw\:dui-collapse-close, .tw\:dui-collapse[open]) > .tw\:dui-collapse-title {
      cursor: unset;
    }
    &:is([open], :focus:not(.tw\:dui-collapse-close)) > :where(.tw\:dui-collapse-content), &:not(.tw\:dui-collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .tw\:dui-collapse-content) {
      padding-bottom: 1rem;
      transition: padding 0.2s ease-out, background-color 0.2s ease-out;
    }
    &:is([open]) {
      &.tw\:dui-collapse-arrow {
         > .tw\:dui-collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
    }
    &.tw\:dui-collapse-open {
      &.tw\:dui-collapse-arrow {
         > .tw\:dui-collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.tw\:dui-collapse-plus {
         > .tw\:dui-collapse-title:after {
          content: "−";
        }
      }
    }
    &.tw\:dui-collapse-arrow:focus:not(.tw\:dui-collapse-close) {
       > .tw\:dui-collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &.tw\:dui-collapse-arrow:not(.tw\:dui-collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .tw\:dui-collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &[open] {
      &.tw\:dui-collapse-plus {
         > .tw\:dui-collapse-title:after {
          content: "−";
        }
      }
    }
    &.tw\:dui-collapse-plus:focus:not(.tw\:dui-collapse-close) {
       > .tw\:dui-collapse-title:after {
        content: "−";
      }
    }
    &.tw\:dui-collapse-plus:not(.tw\:dui-collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .tw\:dui-collapse-title:after {
        content: "−";
      }
    }
    &:is(details) {
      width: 100%;
      & summary {
        position: relative;
        display: block;
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &:is(details) summary {
      outline: none;
    }
  }
  .tw\:dui-collapse-content {
    grid-column-start: 1;
    grid-row-start: 1;
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset;
    transition: visibility 0.2s, padding 0.2s ease-out, background-color 0.2s ease-out;
  }
  .tw\:dui-validator-hint {
    visibility: hidden;
    margin-top: calc(0.25rem * 2);
    font-size: 0.75rem;
  }
  .tw\:dui-validator {
    &:user-valid, &:has(:user-valid) {
      &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
        --dui-input-color: var(--color-success);
      }
    }
    &:user-invalid, &:has(:user-invalid), &[aria-invalid]:not([aria-invalid="false"]) {
      &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
        --dui-input-color: var(--color-error);
      }
      & ~ .tw\:dui-validator-hint {
        visibility: visible;
        display: block;
        color: var(--color-error);
      }
    }
  }
  .tw\:dui-collapse-open {
    grid-template-rows: max-content 1fr;
     > .tw\:dui-collapse-content {
      visibility: visible;
      min-height: fit-content;
      padding-bottom: 1rem;
      transition: padding 0.2s ease-out, background-color 0.2s ease-out;
    }
  }
  .tw\:collapse {
    visibility: collapse;
  }
  .tw\:dui-tabs-lift {
    --dui-tabs-height: auto;
    --dui-tabs-direction: row;
     > .tw\:dui-tab {
      --dui-tab-border: 0 0 var(--border) 0;
      --dui-tab-radius-ss: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-radius-se: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-radius-es: 0;
      --dui-tab-radius-ee: 0;
      --dui-tab-paddings: var(--border) var(--dui-tab-p) 0 var(--dui-tab-p);
      --dui-tab-border-colors: #0000 #0000 var(--dui-tab-border-color) #0000;
      --dui-tab-corner-width: calc(100% + min(var(--radius-field), var(--dui-tab-radius-min)) * 2);
      --dui-tab-corner-height: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-corner-position: top left, top right;
      border-width: var(--dui-tab-border);
      border-start-start-radius: var(--dui-tab-radius-ss);
      border-start-end-radius: var(--dui-tab-radius-se);
      border-end-start-radius: var(--dui-tab-radius-es);
      border-end-end-radius: var(--dui-tab-radius-ee);
      padding: var(--dui-tab-paddings);
      border-color: var(--dui-tab-border-colors);
      &:is(.tw\:dui-tab-active, [aria-selected="true"]):not(.tw\:dui-tab-disabled, [disabled]), &:is(input:checked, label:has(:checked)) {
        --dui-tab-border: var(--border) var(--border) 0 var(--border);
        --dui-tab-border-colors: var(--dui-tab-border-color) var(--dui-tab-border-color) #0000
        var(--dui-tab-border-color);
        --dui-tab-paddings: 0 calc(var(--dui-tab-p) - var(--border)) var(--border)
        calc(var(--dui-tab-p) - var(--border));
        --dui-tab-inset: auto auto 0 auto;
        --dui-tab-grad: calc(69% - var(--border));
        --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
        --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
        background-color: var(--dui-tab-bg);
        &:before {
          z-index: 1;
          content: "";
          display: block;
          position: absolute;
          width: var(--dui-tab-corner-width);
          height: var(--dui-tab-corner-height);
          background-position: var(--dui-tab-corner-position);
          background-image: var(--radius-start), var(--radius-end);
          background-size: min(var(--radius-field), var(--dui-tab-radius-min)) min(var(--radius-field), var(--dui-tab-radius-min));
          background-repeat: no-repeat;
          inset: var(--dui-tab-inset);
        }
        &:first-child:before {
          --radius-start: none;
        }
        [dir="rtl"] &:first-child:before {
          transform: rotateY(180deg);
        }
        &:last-child:before {
          --radius-end: none;
        }
        [dir="rtl"] &:last-child:before {
          transform: rotateY(180deg);
        }
      }
    }
    &:has(.tw\:dui-tab-content) {
       > .tw\:dui-tab:first-child {
        &:not(.tw\:dui-tab-active, [aria-selected="true"]) {
          --dui-tab-border-colors: var(--dui-tab-border-color) var(--dui-tab-border-color) #0000
          var(--dui-tab-border-color);
        }
      }
    }
    .tw\:dui-tab-content {
      --dui-tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
      --dui-tabcontent-radius-ss: 0;
      --dui-tabcontent-radius-se: var(--radius-box);
      --dui-tabcontent-radius-es: var(--radius-box);
      --dui-tabcontent-radius-ee: var(--radius-box);
    }
    :checked, label:has(:checked), :is(.tw\:dui-tab-active, [aria-selected="true"]) {
      & + .tw\:dui-tab-content {
        &:nth-child(1), &:nth-child(n + 3) {
          --dui-tabcontent-radius-ss: var(--radius-box);
        }
      }
    }
  }
  .tw\:dui-radial-progress {
    position: relative;
    display: inline-grid;
    height: var(--dui-size);
    width: var(--dui-size);
    place-content: center;
    border-radius: calc(infinity * 1px);
    background-color: transparent;
    vertical-align: middle;
    box-sizing: content-box;
    --dui-value: 0;
    --dui-size: 5rem;
    --dui-thickness: calc(var(--dui-size) / 10);
    --dui-radialprogress: calc(var(--dui-value) * 1%);
    transition: --radialprogress 0.3s linear;
    &:before {
      position: absolute;
      inset: calc(0.25rem * 0);
      border-radius: calc(infinity * 1px);
      content: "";
      background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--dui-thickness) var(--dui-thickness) no-repeat, conic-gradient(currentColor var(--dui-radialprogress), #0000 0);
      webkit-mask: radial-gradient( farthest-side, #0000 calc(100% - var(--dui-thickness)), #000 calc(100% + 0.5px - var(--dui-thickness)) );
      mask: radial-gradient( farthest-side, #0000 calc(100% - var(--dui-thickness)), #000 calc(100% + 0.5px - var(--dui-thickness)) );
    }
    &:after {
      position: absolute;
      border-radius: calc(infinity * 1px);
      background-color: currentColor;
      transition: transform 0.3s linear;
      content: "";
      inset: calc(50% - var(--dui-thickness) / 2);
      transform: rotate(calc(var(--dui-value) * 3.6deg - 90deg)) translate(calc(var(--dui-size) / 2 - 50%));
    }
  }
  .tw\:dui-list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
    :where(.tw\:dui-list-row) {
      --dui-list-grid-cols: minmax(0, auto) 1fr;
      position: relative;
      display: grid;
      grid-auto-flow: column;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 4);
      word-break: break-word;
      grid-template-columns: var(--dui-list-grid-cols);
      &:has(.tw\:dui-list-col-grow:nth-child(1)) {
        --dui-list-grid-cols: 1fr;
      }
      &:has(.tw\:dui-list-col-grow:nth-child(2)) {
        --dui-list-grid-cols: minmax(0, auto) 1fr;
      }
      &:has(.tw\:dui-list-col-grow:nth-child(3)) {
        --dui-list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.tw\:dui-list-col-grow:nth-child(4)) {
        --dui-list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.tw\:dui-list-col-grow:nth-child(5)) {
        --dui-list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.tw\:dui-list-col-grow:nth-child(6)) {
        --dui-list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
      }
      :not(.tw\:dui-list-col-wrap) {
        grid-row-start: 1;
      }
    }
    & > :not(:last-child) {
      &.tw\:dui-list-row, .tw\:list-row {
        &:after {
          content: "";
          border-bottom: var(--border) solid;
          inset-inline: var(--radius-box);
          position: absolute;
          bottom: calc(0.25rem * 0);
          border-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
          }
        }
      }
    }
  }
  .tw\:dui-toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    top: auto;
    bottom: calc(0.25rem * 4);
    display: flex;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    translate: var(--dui-toast-x, 0) var(--dui-toast-y, 0);
    width: max-content;
    max-width: calc(100vw - 2rem);
    & > * {
      animation: toast 0.25s ease-out;
    }
    &:where(.tw\:dui-toast-start) {
      inset-inline-start: calc(0.25rem * 4);
      inset-inline-end: auto;
      --dui-toast-x: 0;
    }
    &:where(.tw\:dui-toast-center) {
      inset-inline-start: calc(1/2 * 100%);
      inset-inline-end: calc(1/2 * 100%);
      --dui-toast-x: -50%;
    }
    &:where(.tw\:dui-toast-end) {
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 4);
      --dui-toast-x: 0;
    }
    &:where(.tw\:dui-toast-bottom) {
      top: auto;
      bottom: calc(0.25rem * 4);
      --dui-toast-y: 0;
    }
    &:where(.tw\:dui-toast-middle) {
      top: calc(1/2 * 100%);
      bottom: auto;
      --dui-toast-y: -50%;
    }
    &:where(.tw\:dui-toast-top) {
      top: calc(0.25rem * 4);
      bottom: auto;
      --dui-toast-y: 0;
    }
  }
  .tw\:dui-toggle {
    border: var(--border) solid currentColor;
    color: var(--dui-input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc( var(--radius-selector) + min(var(--dui-toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    padding: var(--dui-toggle-p);
    box-shadow: 0 1px currentColor inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    }
    transition: color 0.3s, grid-template-columns 0.2s;
    --dui-input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    }
    --dui-toggle-p: calc(var(--dui-size) * 0.125);
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--dui-size) * 2) - (var(--border) + var(--dui-toggle-p)) * 2);
    height: var(--dui-size);
     > * {
      z-index: 1;
      grid-column: span 1 / span 1;
      grid-column-start: 2;
      grid-row-start: 1;
      height: 100%;
      cursor: pointer;
      appearance: none;
      background-color: transparent;
      padding: calc(0.25rem * 0.5);
      transition: opacity 0.2s, rotate 0.4s;
      border: none;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:nth-child(2) {
        color: var(--color-base-100);
        rotate: 0deg;
      }
      &:nth-child(3) {
        color: var(--color-base-100);
        opacity: 0%;
        rotate: -15deg;
      }
    }
    &:has(:checked) {
       > :nth-child(2) {
        opacity: 0%;
        rotate: 15deg;
      }
       > :nth-child(3) {
        opacity: 100%;
        rotate: 0deg;
      }
    }
    &:before {
      position: relative;
      inset-inline-start: calc(0.25rem * 0);
      grid-column-start: 2;
      grid-row-start: 1;
      aspect-ratio: 1 / 1;
      height: 100%;
      border-radius: var(--radius-selector);
      background-color: currentColor;
      translate: 0;
      --tw-content: "";
      content: var(--tw-content);
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
      }
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--dui-fx-noise);
    }
    @media (forced-colors: active) {
      &:before {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
        outline-offset: calc(1px * -1);
      }
    }
    @media print {
      &:before {
        outline: 0.25rem solid;
        outline-offset: -1rem;
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr;
      background-color: var(--color-base-100);
      --dui-input-color: var(--color-base-content);
      &:before {
        background-color: currentColor;
      }
      @starting-style {
        &:before {
          opacity: 0;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
      &:before {
        background-color: transparent;
        border: var(--border) solid currentColor;
      }
    }
  }
  .tw\:dui-input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--dui-size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--dui-join-ss, var(--radius-field));
    border-start-end-radius: var(--dui-join-se, var(--radius-field));
    border-end-start-radius: var(--dui-join-es, var(--radius-field));
    border-end-end-radius: var(--dui-join-ee, var(--radius-field));
    border-color: var(--dui-input-color);
    box-shadow: 0 1px var(--dui-input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    --dui-input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    &:where(input) {
      display: inline-flex;
    }
    :where(input) {
      display: inline-flex;
      height: 100%;
      width: 100%;
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where(input[type="url"]), :where(input[type="email"]) {
      direction: ltr;
    }
    :where(input[type="date"]) {
      display: inline-block;
    }
    &:focus, &:focus-within {
      --dui-input-color: var(--color-base-content);
      box-shadow: 0 1px var(--dui-input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--dui-input-color);
      outline-offset: 2px;
      isolation: isolate;
      z-index: 1;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &::-webkit-calendar-picker-indicator {
      position: absolute;
      inset-inline-end: 0.75em;
    }
  }
  .tw\:dui-indicator {
    position: relative;
    display: inline-flex;
    width: max-content;
    :where(.tw\:dui-indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--dui-indicator-t, 0);
      bottom: var(--dui-indicator-b, auto);
      left: var(--dui-indicator-s, auto);
      right: var(--dui-indicator-e, 0);
      translate: var(--dui-indicator-x, 50%) var(--dui-indicator-y, -50%);
    }
  }
  .tw\:dui-table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    .tw\:dui-tr.tw\:dui-row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
          }
        }
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
    }
    :where(thead, tfoot) {
      white-space: nowrap;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      font-size: 0.875rem;
      font-weight: 600;
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
    :where(.tw\:dui-table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.tw\:dui-table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.tw\:dui-table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
  }
  .tw\:dui-avatar-offline {
    &:before {
      content: "";
      position: absolute;
      z-index: 1;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-300);
      outline: 2px solid var(--color-base-100);
      width: 15%;
      height: 15%;
      top: 7%;
      right: 7%;
    }
  }
  .tw\:dui-avatar-online {
    &:before {
      content: "";
      position: absolute;
      z-index: 1;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-success);
      outline: 2px solid var(--color-base-100);
      width: 15%;
      height: 15%;
      top: 7%;
      right: 7%;
    }
  }
  .tw\:dui-steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr;
    .tw\:dui-step {
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-columns: auto;
      grid-template-rows: repeat(2, minmax(0, 1fr));
      grid-template-rows: 40px 1fr;
      place-items: center;
      text-align: center;
      min-width: 4rem;
      --dui-step-bg: var(--color-base-300);
      --dui-step-fg: var(--color-base-content);
      &:before {
        top: calc(0.25rem * 0);
        grid-column-start: 1;
        grid-row-start: 1;
        height: calc(0.25rem * 2);
        width: 100%;
        border: 1px solid;
        color: var(--dui-step-bg);
        background-color: var(--dui-step-bg);
        --tw-content: "";
        content: var(--tw-content);
        margin-inline-start: -100%;
      }
      > .tw\:dui-step-icon, &:not(:has(.tw\:dui-step-icon)):after {
        content: counter(step);
        counter-increment: step;
        z-index: 1;
        color: var(--dui-step-fg);
        background-color: var(--dui-step-bg);
        border: 1px solid var(--dui-step-bg);
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        display: grid;
        height: calc(0.25rem * 8);
        width: calc(0.25rem * 8);
        place-items: center;
        place-self: center;
        border-radius: calc(infinity * 1px);
      }
      &:first-child:before {
        content: none;
      }
      &[data-content]:after {
        content: attr(data-content);
      }
    }
    .tw\:dui-step-neutral {
      + .tw\:dui-step-neutral:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-neutral);
        --dui-step-fg: var(--color-neutral-content);
      }
    }
    .tw\:dui-step-primary {
      + .tw\:dui-step-primary:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-primary);
        --dui-step-fg: var(--color-primary-content);
      }
    }
    .tw\:dui-step-secondary {
      + .tw\:dui-step-secondary:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-secondary);
        --dui-step-fg: var(--color-secondary-content);
      }
    }
    .tw\:dui-step-accent {
      + .tw\:dui-step-accent:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-accent);
        --dui-step-fg: var(--color-accent-content);
      }
    }
    .tw\:dui-step-info {
      + .tw\:dui-step-info:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-info);
        --dui-step-fg: var(--color-info-content);
      }
    }
    .tw\:dui-step-success {
      + .tw\:dui-step-success:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-success);
        --dui-step-fg: var(--color-success-content);
      }
    }
    .tw\:dui-step-warning {
      + .tw\:dui-step-warning:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-warning);
        --dui-step-fg: var(--color-warning-content);
      }
    }
    .tw\:dui-step-error {
      + .tw\:dui-step-error:before, &:after, > .tw\:dui-step-icon {
        --dui-step-bg: var(--color-error);
        --dui-step-fg: var(--color-error-content);
      }
    }
  }
  .tw\:dui-diff-resizer {
    position: relative;
    top: calc(1/2 * 100%);
    z-index: 1;
    grid-column-start: 1;
    grid-row-start: 1;
    height: calc(0.25rem * 2);
    width: 50cqi;
    max-width: calc(100cqi - 1rem);
    min-width: 1rem;
    resize: horizontal;
    overflow: hidden;
    opacity: 0%;
    transform: scaleY(3) translate(0.35rem, 0.08rem);
    cursor: ew-resize;
    transform-origin: 100% 100%;
    clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
    transition: min-width 0.3s ease-out, max-width 0.3s ease-out;
  }
  .tw\:dui-range {
    appearance: none;
    webkit-appearance: none;
    --dui-range-thumb: var(--color-base-100);
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --dui-range-progress: currentColor;
    --dui-range-fill: 1;
    --dui-range-p: 0.25rem;
    --dui-range-bg: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      --dui-range-bg: color-mix(in oklab, currentColor 10%, #0000);
    }
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--dui-range-p), var(--radius-selector-max)));
    border: none;
    height: var(--dui-range-thumb-size);
    [dir="rtl"] & {
      --dui-range-dir: -1;
    }
    &:focus {
      outline: none;
    }
    &:focus-visible {
      outline: 2px solid;
      outline-offset: 2px;
    }
    &::-webkit-slider-runnable-track {
      width: 100%;
      background-color: var(--dui-range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--dui-range-thumb-size) * 0.5);
    }
    @media (forced-colors: active) {
      &::-webkit-slider-runnable-track {
        border: 1px solid;
      }
    }
    @media (forced-colors: active) {
      &::-moz-range-track {
        border: 1px solid;
      }
    }
    &::-webkit-slider-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--dui-range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--dui-range-thumb-size);
      width: var(--dui-range-thumb-size);
      border: var(--dui-range-p) solid;
      appearance: none;
      webkit-appearance: none;
      top: 50%;
      color: var(--dui-range-progress);
      transform: translateY(-50%);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--dui-range-thumb) inset, calc((var(--dui-range-dir, 1) * -100rem) - (var(--dui-range-dir, 1) * var(--dui-range-thumb-size) / 2)) 0 0 calc(100rem * var(--dui-range-fill));
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--dui-range-thumb) inset, calc((var(--dui-range-dir, 1) * -100rem) - (var(--dui-range-dir, 1) * var(--dui-range-thumb-size) / 2)) 0 0 calc(100rem * var(--dui-range-fill));
      }
    }
    &::-moz-range-track {
      width: 100%;
      background-color: var(--dui-range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--dui-range-thumb-size) * 0.5);
    }
    &::-moz-range-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--dui-range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--dui-range-thumb-size);
      width: var(--dui-range-thumb-size);
      border: var(--dui-range-p) solid;
      top: 50%;
      color: var(--dui-range-progress);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--dui-range-thumb) inset, calc((var(--dui-range-dir, 1) * -100rem) - (var(--dui-range-dir, 1) * var(--dui-range-thumb-size) / 2)) 0 0 calc(100rem * var(--dui-range-fill));
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--dui-range-thumb) inset, calc((var(--dui-range-dir, 1) * -100rem) - (var(--dui-range-dir, 1) * var(--dui-range-thumb-size) / 2)) 0 0 calc(100rem * var(--dui-range-fill));
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
    }
  }
  .tw\:dui-countdown {
    display: inline-flex;
    &.tw\:dui-countdown {
      line-height: 1em;
    }
    & > * {
      display: inline-block;
      overflow-y: hidden;
      height: 1em;
      &:before {
        position: relative;
        content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
        white-space: pre;
        top: calc(var(--dui-value) * -1em);
        text-align: center;
        transition: all 1s cubic-bezier(1, 0, 0, 1);
      }
    }
  }
  .tw\:dui-tabs-border {
    .tw\:dui-tab {
      --dui-tab-border-color: #0000 #0000 var(--dui-tab-border-color) #0000;
      position: relative;
      border-radius: var(--radius-field);
      &:before {
        --tw-content: "";
        content: var(--tw-content);
        background-color: var(--dui-tab-border-color);
        transition: background-color 0.2s ease;
        width: 80%;
        height: 3px;
        border-radius: var(--radius-field);
        bottom: 0;
        left: 10%;
        position: absolute;
      }
      &:is(.tw\:dui-tab-active, [aria-selected="true"]):not(.tw\:dui-tab-disabled, [disabled]), &:is(input:checked), &:is(label:has(:checked)) {
        &:before {
          --dui-tab-border-color: currentColor;
          border-top: 3px solid;
        }
      }
    }
  }
  .tw\:dui-chat-bubble {
    position: relative;
    display: block;
    width: fit-content;
    border-radius: var(--radius-field);
    background-color: var(--color-base-300);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    color: var(--color-base-content);
    grid-row-end: 3;
    min-height: 2rem;
    min-width: 2.5rem;
    max-width: 90%;
    &:before {
      position: absolute;
      bottom: calc(0.25rem * 0);
      height: calc(0.25rem * 3);
      width: calc(0.25rem * 3);
      background-color: inherit;
      content: "";
      mask-repeat: no-repeat;
      mask-image: var(--dui-mask-chat);
      mask-position: 0px -1px;
      mask-size: 13px;
    }
  }
  .tw\:dui-select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--dui-size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--dui-join-ss, var(--radius-field));
    border-start-end-radius: var(--dui-join-se, var(--radius-field));
    border-end-start-radius: var(--dui-join-es, var(--radius-field));
    border-end-end-radius: var(--dui-join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--dui-input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    border-color: var(--dui-input-color);
    --dui-input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    [dir="rtl"] & {
      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
    }
    select {
      margin-inline-start: calc(0.25rem * -4);
      margin-inline-end: calc(0.25rem * -7);
      width: calc(100% + 2.75rem);
      appearance: none;
      padding-inline-start: calc(0.25rem * 4);
      padding-inline-end: calc(0.25rem * 7);
      height: calc(100% - 2px);
      background: inherit;
      border-radius: inherit;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * -5.5);
        background-image: none;
      }
    }
    &:focus, &:focus-within {
      --dui-input-color: var(--color-base-content);
      box-shadow: 0 1px var(--dui-input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--dui-input-color);
      outline-offset: 2px;
      isolation: isolate;
      z-index: 1;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
  }
  .tw\:dui-timeline {
    position: relative;
    display: flex;
     > li {
      position: relative;
      display: grid;
      flex-shrink: 0;
      align-items: center;
      grid-template-rows: var(--dui-timeline-row-start, minmax(0, 1fr)) auto var( --timeline-row-end, minmax(0, 1fr) );
      grid-template-columns: var(--dui-timeline-col-start, minmax(0, 1fr)) auto var( --timeline-col-end, minmax(0, 1fr) );
       > hr {
        border: none;
        width: 100%;
        &:first-child {
          grid-column-start: 1;
          grid-row-start: 2;
        }
        &:last-child {
          grid-column-start: 3;
          grid-column-end: none;
          grid-row-start: 2;
          grid-row-end: auto;
        }
        @media print {
          border: 0.1px solid var(--color-base-300);
        }
      }
    }
    :where(hr) {
      height: calc(0.25rem * 1);
      background-color: var(--color-base-300);
    }
    &:has(.tw\:dui-timeline-middle hr) {
      &:first-child {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
      }
      &:last-child {
        border-start-start-radius: var(--radius-selector);
        border-end-start-radius: var(--radius-selector);
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
    }
    &:not(:has(.tw\:dui-timeline-middle)) {
      :first-child hr:last-child {
        border-start-start-radius: var(--radius-selector);
        border-end-start-radius: var(--radius-selector);
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
      :last-child hr:first-child {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
      }
    }
  }
  .tw\:dui-card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.tw\:dui-card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.tw\:dui-card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.tw\:dui-image-full {
      display: grid;
       > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
       > .tw\:dui-card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
       > figure img {
        height: 100%;
        object-fit: cover;
        filter: brightness(28%);
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .tw\:dui-swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    input {
      appearance: none;
      border: none;
    }
     > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .tw\:dui-swap-on, .tw\:dui-swap-indeterminate, input:indeterminate ~ .tw\:dui-swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .tw\:dui-swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .tw\:dui-swap-on, input:indeterminate ~ .tw\:dui-swap-indeterminate {
      opacity: 100%;
      backface-visibility: visible;
    }
  }
  .tw\:dui-collapse-title {
    grid-column-start: 1;
    grid-row-start: 1;
    position: relative;
    width: 100%;
    padding: 1rem;
    padding-inline-end: 3rem;
    min-height: 1lh;
    transition: background-color 0.2s ease-out;
  }
  .tw\:sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .tw\:dui-mockup-browser {
    position: relative;
    overflow: hidden;
    overflow-x: auto;
    border-radius: var(--radius-box);
    pre[data-prefix] {
      &:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
    }
    .tw\:dui-mockup-browser-toolbar {
      margin-block: calc(0.25rem * 3);
      display: inline-flex;
      width: 100%;
      align-items: center;
      padding-right: 1.4em;
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        flex-direction: row-reverse;
      }
      &:before {
        content: "";
        margin-right: 4.8rem;
        display: inline-block;
        aspect-ratio: 1 / 1;
        height: calc(0.25rem * 3);
        border-radius: calc(infinity * 1px);
        opacity: 30%;
        box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
      }
      .tw\:dui-input {
        margin-inline: auto;
        display: flex;
        height: 100%;
        align-items: center;
        gap: calc(0.25rem * 2);
        overflow: hidden;
        background-color: var(--color-base-200);
        text-overflow: ellipsis;
        white-space: nowrap;
        font-size: 0.75rem;
        direction: ltr;
        &:before {
          content: "";
          width: calc(0.25rem * 4);
          height: calc(0.25rem * 4);
          opacity: 30%;
          background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
        }
      }
    }
  }
  .tw\:dui-menu-horizontal {
    display: inline-flex;
    flex-direction: row;
    & > li:not(.tw\:dui-menu-title) > details > ul {
      position: absolute;
      margin-inline-start: calc(0.25rem * 0);
      margin-top: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      padding-inline-end: calc(0.25rem * 2);
    }
    & > li > details > ul {
      &:before {
        content: none;
      }
    }
    :where(& > li:not(.tw\:dui-menu-title) > details > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
    }
  }
  .tw\:dui-menu-vertical {
    display: inline-flex;
    flex-direction: column;
    & > li:not(.tw\:dui-menu-title) > details > ul {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      margin-top: calc(0.25rem * 0);
      padding-block: calc(0.25rem * 0);
      padding-inline-end: calc(0.25rem * 0);
    }
  }
  .tw\:dui-mockup-code {
    position: relative;
    overflow: hidden;
    overflow-x: auto;
    border-radius: var(--radius-box);
    background-color: var(--color-neutral);
    padding-block: calc(0.25rem * 5);
    color: var(--color-neutral-content);
    font-size: 0.875rem;
    direction: ltr;
    &:before {
      content: "";
      margin-bottom: calc(0.25rem * 4);
      display: block;
      height: calc(0.25rem * 3);
      width: calc(0.25rem * 3);
      border-radius: calc(infinity * 1px);
      opacity: 30%;
      box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
    }
    pre {
      padding-right: calc(0.25rem * 5);
      &:before {
        content: "";
        margin-right: 2ch;
      }
      &[data-prefix] {
        &:before {
          content: attr(data-prefix);
          display: inline-block;
          width: calc(0.25rem * 8);
          text-align: right;
          opacity: 50%;
        }
      }
    }
  }
  .tw\:dui-mockup-window {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    overflow-x: auto;
    border-radius: var(--radius-box);
    padding-top: calc(0.25rem * 5);
    &:before {
      content: "";
      margin-bottom: calc(0.25rem * 4);
      display: block;
      aspect-ratio: 1 / 1;
      height: calc(0.25rem * 3);
      flex-shrink: 0;
      align-self: flex-start;
      border-radius: calc(infinity * 1px);
      opacity: 30%;
      box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
    }
    [dir="rtl"] &:before {
      align-self: flex-end;
    }
    pre[data-prefix] {
      &:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
    }
  }
  .tw\:dui-avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & > div {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
  .tw\:dui-checkbox {
    border: var(--border) solid var(--dui-input-color, var(--color-base-content));
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--dui-input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--dui-size);
    height: var(--dui-size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--dui-fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--dui-input-color, currentColor);
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--dui-input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .tw\:dui-radio {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--dui-input-color, currentColor);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--dui-input-color, color-mix(in srgb, currentColor 20%, #0000));
    }
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--dui-size);
    height: var(--dui-size);
    color: var(--dui-input-color, currentColor);
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--dui-fx-noise);
    }
    &:focus-visible {
      outline: 2px solid currentColor;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .tw\:dui-rating {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & input {
      border: none;
      appearance: none;
    }
    :where(*) {
      animation: rating 0.25s ease-out;
      height: calc(0.25rem * 6);
      width: calc(0.25rem * 6);
      border-radius: 0;
      background-color: var(--color-base-content);
      opacity: 20%;
      &:is(input) {
        cursor: pointer;
      }
    }
    & .tw\:dui-rating-hidden {
      width: calc(0.25rem * 2);
      background-color: transparent;
    }
    input[type="radio"]:checked {
      background-image: none;
    }
    * {
      &:checked, &[aria-checked="true"], &[aria-current="true"], &:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
        opacity: 100%;
      }
      &:focus-visible {
        transition: scale 0.2s ease-out;
        scale: 1.1;
      }
    }
    & *:active:focus {
      animation: none;
      scale: 1.1;
    }
    &.tw\:dui-rating-xs :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 4);
      height: calc(0.25rem * 4);
    }
    &.tw\:dui-rating-sm :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 5);
      height: calc(0.25rem * 5);
    }
    &.tw\:dui-rating-md :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 6);
      height: calc(0.25rem * 6);
    }
    &.tw\:dui-rating-lg :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 7);
      height: calc(0.25rem * 7);
    }
    &.tw\:dui-rating-xl :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 8);
      height: calc(0.25rem * 8);
    }
  }
  .tw\:dui-drawer {
    position: relative;
    display: grid;
    width: 100%;
    grid-auto-columns: max-content auto;
  }
  .tw\:dui-stats {
    position: relative;
    display: inline-grid;
    grid-auto-flow: column;
    overflow-x: auto;
    border-radius: var(--radius-box);
  }
  .tw\:dui-progress {
    position: relative;
    height: calc(0.25rem * 2);
    width: 100%;
    appearance: none;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, currentColor 20%, transparent);
    }
    color: var(--color-base-content);
    &:indeterminate {
      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
      background-size: 200%;
      background-position-x: 15%;
      animation: progress 5s ease-in-out infinite;
      @supports (-moz-appearance: none) {
        &::-moz-progress-bar {
          background-color: transparent;
          background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
          background-size: 200%;
          background-position-x: 15%;
          animation: progress 5s ease-in-out infinite;
        }
      }
    }
    @supports (-moz-appearance: none) {
      &::-moz-progress-bar {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
    @supports (-webkit-appearance: none) {
      &::-webkit-progress-bar {
        border-radius: var(--radius-box);
        background-color: transparent;
      }
      &::-webkit-progress-value {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
  }
  .tw\:dui-tooltip-bottom {
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, -0.25rem));
      inset: var(--dui-tt-off) auto auto 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, -0.25rem)) rotate(180deg);
      inset: var(--dui-tt-tail) auto auto 50%;
    }
  }
  .tw\:dui-tooltip-left {
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--dui-tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
      inset: 50% var(--dui-tt-off) auto auto;
    }
    &:after {
      transform: translateX(var(--dui-tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
      inset: 50% calc(var(--dui-tt-tail) + 1px) auto auto;
    }
  }
  .tw\:dui-tooltip-right {
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--dui-tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
      inset: 50% auto auto var(--dui-tt-off);
    }
    &:after {
      transform: translateX(var(--dui-tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
      inset: 50% auto auto calc(var(--dui-tt-tail) + 1px);
    }
  }
  .tw\:dui-tooltip-top {
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, 0.25rem));
      inset: auto auto var(--dui-tt-off) 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--dui-tt-pos, 0.25rem));
      inset: auto auto var(--dui-tt-tail) 50%;
    }
  }
  .tw\:dui-dropdown-right {
    --dui-anchor-h: right;
    --dui-anchor-v: span-bottom;
    .tw\:dui-dropdown-content {
      inset-inline-start: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: left;
    }
  }
  .tw\:dui-chat-end {
    place-items: end;
    grid-template-columns: 1fr auto;
    .tw\:dui-chat-header {
      grid-column-start: 1;
    }
    .tw\:dui-chat-footer {
      grid-column-start: 1;
    }
    .tw\:dui-chat-image {
      grid-column-start: 2;
    }
    .tw\:dui-chat-bubble {
      grid-column-start: 1;
      border-end-end-radius: 0;
      &:before {
        transform: rotateY(180deg);
        inset-inline-start: 100%;
      }
      [dir="rtl"] &:before {
        transform: rotateY(0deg);
      }
    }
  }
  .tw\:dui-chat-start {
    place-items: start;
    grid-template-columns: auto 1fr;
    .tw\:dui-chat-header {
      grid-column-start: 2;
    }
    .tw\:dui-chat-footer {
      grid-column-start: 2;
    }
    .tw\:dui-chat-image {
      grid-column-start: 1;
    }
    .tw\:dui-chat-bubble {
      grid-column-start: 2;
      border-end-start-radius: 0;
      &:before {
        transform: rotateY(0deg);
        inset-inline-start: -0.75rem;
      }
      [dir="rtl"] &:before {
        transform: rotateY(180deg);
      }
    }
  }
  .tw\:dui-dropdown-left {
    --dui-anchor-h: left;
    --dui-anchor-v: span-bottom;
    .tw\:dui-dropdown-content {
      inset-inline-end: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: right;
    }
  }
  .tw\:dui-dropdown-center {
    --dui-anchor-h: center;
    :where(.tw\:dui-dropdown-content) {
      inset-inline-end: calc(1/2 * 100%);
      translate: 50% 0;
      [dir="rtl"] & {
        translate: -50% 0;
      }
    }
    &.tw\:dui-dropdown-left {
      --dui-anchor-h: left;
      --dui-anchor-v: center;
      .tw\:dui-dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
    &.tw\:dui-dropdown-right {
      --dui-anchor-h: right;
      --dui-anchor-v: center;
      .tw\:dui-dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
  }
  .tw\:dui-dropdown-end {
    --dui-anchor-h: span-left;
    :where(.tw\:dui-dropdown-content) {
      inset-inline-end: calc(0.25rem * 0);
      translate: 0 0;
      [dir="rtl"] & {
        translate: 0 0;
      }
    }
    &.tw\:dui-dropdown-left {
      --dui-anchor-h: left;
      --dui-anchor-v: span-top;
      .tw\:dui-dropdown-content {
        top: auto;
        bottom: calc(0.25rem * 0);
      }
    }
    &.tw\:dui-dropdown-right {
      --dui-anchor-h: right;
      --dui-anchor-v: span-top;
      .tw\:dui-dropdown-content {
        top: auto;
        bottom: calc(0.25rem * 0);
      }
    }
  }
  .tw\:dui-dropdown-start {
    --dui-anchor-h: span-right;
    :where(.tw\:dui-dropdown-content) {
      inset-inline-end: auto;
      translate: 0 0;
      [dir="rtl"] & {
        translate: 0 0;
      }
    }
    &.tw\:dui-dropdown-left {
      --dui-anchor-h: left;
      --dui-anchor-v: span-bottom;
      .tw\:dui-dropdown-content {
        top: calc(0.25rem * 0);
        bottom: auto;
      }
    }
    &.tw\:dui-dropdown-right {
      --dui-anchor-h: right;
      --dui-anchor-v: span-bottom;
      .tw\:dui-dropdown-content {
        top: calc(0.25rem * 0);
        bottom: auto;
      }
    }
  }
  .tw\:dui-dropdown-bottom {
    --dui-anchor-v: bottom;
    .tw\:dui-dropdown-content {
      top: 100%;
      bottom: auto;
      transform-origin: top;
    }
  }
  .tw\:dui-dropdown-top {
    --dui-anchor-v: top;
    .tw\:dui-dropdown-content {
      top: auto;
      bottom: 100%;
      transform-origin: bottom;
    }
  }
  .tw\:dui-dock-sm {
    height: calc(0.25rem * 14);
    height: 3.5rem;
    height: calc(3.5rem + env(safe-area-inset-bottom));
    .tw\:dui-dock-active {
      &:after {
        bottom: -0.1rem;
      }
    }
    .tw\:dui-dock-label {
      font-size: 0.625rem;
    }
  }
  .tw\:dui-dock-lg {
    height: 4.5rem;
    height: calc(4.5rem + env(safe-area-inset-bottom));
    .tw\:dui-dock-active {
      &:after {
        bottom: 0.4rem;
      }
    }
    .tw\:dui-dock-label {
      font-size: 0.6875rem;
    }
  }
  .tw\:dui-dock-xl {
    height: 5rem;
    height: calc(5rem + env(safe-area-inset-bottom));
    .tw\:dui-dock-active {
      &:after {
        bottom: 0.4rem;
      }
    }
    .tw\:dui-dock-label {
      font-size: 0.75rem;
    }
  }
  .tw\:dui-dock-xs {
    height: 3rem;
    height: calc(3rem + env(safe-area-inset-bottom));
    .tw\:dui-dock-active {
      &:after {
        bottom: -0.1rem;
      }
    }
    .tw\:dui-dock-label {
      font-size: 0.625rem;
    }
  }
  .tw\:dui-file-input {
    cursor: pointer;
    cursor: pointer;
    border: var(--border) solid #0000;
    display: inline-flex;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    width: clamp(3rem, 20rem, 100%);
    height: var(--dui-size);
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    line-height: 2;
    border-start-start-radius: var(--dui-join-ss, var(--radius-field));
    border-start-end-radius: var(--dui-join-se, var(--radius-field));
    border-end-start-radius: var(--dui-join-es, var(--radius-field));
    border-end-end-radius: var(--dui-join-ee, var(--radius-field));
    border-color: var(--dui-input-color);
    box-shadow: 0 1px var(--dui-input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    --dui-input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    &::file-selector-button {
      margin-inline-end: calc(0.25rem * 4);
      cursor: pointer;
      padding-inline: calc(0.25rem * 4);
      webkit-user-select: none;
      user-select: none;
      height: calc(100% + var(--border) * 2);
      margin-block: calc(var(--border) * -1);
      margin-inline-start: calc(var(--border) * -1);
      font-size: 0.875rem;
      color: var(--dui-btn-fg);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--dui-btn-border);
      border-start-start-radius: calc(var(--dui-join-ss, var(--radius-field) - var(--border)));
      border-end-start-radius: calc(var(--dui-join-es, var(--radius-field) - var(--border)));
      font-weight: 600;
      background-color: var(--dui-btn-bg);
      background-size: calc(var(--noise) * 100%);
      background-image: var(--dui-btn-noise);
      text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
      box-shadow: 0 0.5px 0 0.5px white inset, var(--dui-btn-shadow);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--dui-btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--dui-btn-shadow);
      }
      --dui-size: calc(var(--size-field, 0.25rem) * 10);
      --dui-btn-bg: var(--dui-btn-color, var(--color-base-200));
      --dui-btn-fg: var(--color-base-content);
      --dui-btn-border: var(--dui-btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-border: color-mix(in oklab, var(--dui-btn-bg), #000 5%);
      }
      --dui-btn-shadow: 0 3px 2px -2px var(--dui-btn-bg),
      0 4px 3px -2px var(--dui-btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--dui-btn-bg) 30%, #0000),
      0 4px 3px -2px color-mix(in oklab, var(--dui-btn-bg) 30%, #0000);
      }
      --dui-btn-noise: var(--dui-fx-noise);
    }
    &:focus {
      --dui-input-color: var(--color-base-content);
      box-shadow: 0 1px var(--dui-input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) 10%, #0000);
      }
      outline: 2px solid var(--dui-input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      &::file-selector-button {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        --dui-btn-border: #0000;
        --dui-btn-noise: none;
        --dui-btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --dui-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
      }
    }
  }
  .tw\:dui-hero-content {
    isolation: isolate;
    display: flex;
    max-width: 80rem;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 4);
    padding: calc(0.25rem * 4);
  }
  .tw\:dui-textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    touch-action: manipulation;
    border-color: var(--dui-input-color);
    box-shadow: 0 1px var(--dui-input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --dui-input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    textarea {
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --dui-input-color: var(--color-base-content);
      box-shadow: 0 1px var(--dui-input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--dui-input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--dui-input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
  }
  .tw\:dui-btn-active {
    --dui-btn-bg: var(--dui-btn-color, var(--color-base-200));
    @supports (color: color-mix(in lab, red, red)) {
      --dui-btn-bg: color-mix(in oklab, var(--dui-btn-color, var(--color-base-200)), #000 7%);
    }
    --dui-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    isolation: isolate;
  }
  .tw\:dui-mockup-phone-camera {
    grid-column: 1/1;
    grid-row: 1/1;
    background: #000;
    height: 32px;
    width: 126px;
    border-radius: 17px;
    z-index: 1;
    margin-top: 6px;
  }
  .tw\:dui-stack {
    display: inline-grid;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    grid-template-rows: 3px 4px 1fr 4px 3px;
    & > * {
      height: 100%;
      width: 100%;
      &:nth-child(n + 2) {
        width: 100%;
        opacity: 70%;
      }
      &:nth-child(2) {
        z-index: 2;
        opacity: 90%;
      }
      &:nth-child(1) {
        z-index: 3;
        width: 100%;
      }
    }
    &, &.tw\:dui-stack-bottom {
       > * {
        grid-column: 3 / 4;
        grid-row: 3 / 6;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 1 / 4;
        }
      }
    }
    &.tw\:dui-stack-top {
       > * {
        grid-column: 3 / 4;
        grid-row: 1 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 3 / 6;
        }
      }
    }
    &.tw\:dui-stack-start {
       > * {
        grid-column: 1 / 4;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 3 / 6;
          grid-row: 1 / 6;
        }
      }
    }
    &.tw\:dui-stack-end {
       > * {
        grid-column: 3 / 6;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 4;
          grid-row: 1 / 6;
        }
      }
    }
  }
  .tw\:dui-modal-backdrop {
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    align-self: stretch;
    justify-self: stretch;
    color: transparent;
    z-index: -1;
    button {
      cursor: pointer;
    }
  }
  .tw\:dui-tab-content {
    order: var(--dui-tabcontent-order);
    display: none;
    border-color: transparent;
    --dui-tabcontent-radius-ss: 0;
    --dui-tabcontent-radius-se: 0;
    --dui-tabcontent-radius-es: 0;
    --dui-tabcontent-radius-ee: 0;
    --dui-tabcontent-order: 1;
    width: 100%;
    margin: var(--dui-tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--dui-tabcontent-radius-ss);
    border-start-end-radius: var(--dui-tabcontent-radius-se);
    border-end-start-radius: var(--dui-tabcontent-radius-es);
    border-end-end-radius: var(--dui-tabcontent-radius-ee);
  }
  .tw\:dui-mockup-phone-display {
    grid-column: 1/1;
    grid-row: 1/1;
    overflow: hidden;
    border-radius: 49px;
    width: 390px;
    height: 845px;
  }
  .tw\:dui-timeline-end {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 4;
    margin: calc(0.25rem * 1);
    align-self: flex-start;
    justify-self: center;
  }
  .tw\:dui-timeline-start {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 2;
    margin: calc(0.25rem * 1);
    align-self: flex-end;
    justify-self: center;
  }
  .tw\:dui-timeline-horizontal {
    flex-direction: row;
     > li {
      align-items: center;
       > hr {
        height: calc(0.25rem * 1);
        width: 100%;
        &:first-child {
          grid-column-start: 1;
          grid-row-start: 2;
        }
        &:last-child {
          grid-column-start: 3;
          grid-column-end: none;
          grid-row-start: 2;
          grid-row-end: auto;
        }
      }
    }
    .tw\:dui-timeline-start {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 1;
      grid-row-end: 2;
      align-self: flex-end;
      justify-self: center;
    }
    .tw\:dui-timeline-end {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 3;
      grid-row-end: 4;
      align-self: flex-start;
      justify-self: center;
    }
    &:has(.tw\:dui-timeline-middle) {
       > li {
         > hr {
          &:first-child {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
            border-start-end-radius: var(--radius-selector);
            border-end-end-radius: var(--radius-selector);
          }
          &:last-child {
            border-start-start-radius: var(--radius-selector);
            border-end-start-radius: var(--radius-selector);
            border-start-end-radius: 0;
            border-end-end-radius: 0;
          }
        }
      }
    }
    &:not(:has(.tw\:dui-timeline-middle)) {
      :first-child {
         > hr:last-child {
          border-start-start-radius: var(--radius-selector);
          border-end-start-radius: var(--radius-selector);
          border-start-end-radius: 0;
          border-end-end-radius: 0;
        }
      }
      :last-child {
         > hr:first-child {
          border-start-start-radius: 0;
          border-end-start-radius: 0;
          border-start-end-radius: var(--radius-selector);
          border-end-end-radius: var(--radius-selector);
        }
      }
    }
  }
  .tw\:dui-timeline-vertical {
    flex-direction: column;
     > li {
      justify-items: center;
      --dui-timeline-row-start: minmax(0, 1fr);
      --dui-timeline-row-end: minmax(0, 1fr);
       > hr {
        height: 100%;
        width: calc(0.25rem * 1);
        &:first-child {
          grid-column-start: 2;
          grid-row-start: 1;
        }
        &:last-child {
          grid-column-start: 2;
          grid-column-end: auto;
          grid-row-start: 3;
          grid-row-end: none;
        }
      }
    }
    .tw\:dui-timeline-start {
      grid-column-start: 1;
      grid-column-end: 2;
      grid-row-start: 1;
      grid-row-end: 4;
      align-self: center;
      justify-self: flex-end;
    }
    .tw\:dui-timeline-end {
      grid-column-start: 3;
      grid-column-end: 4;
      grid-row-start: 1;
      grid-row-end: 4;
      align-self: center;
      justify-self: flex-start;
    }
    &:has(.tw\:dui-timeline-middle) {
       > li {
         > hr {
          &:first-child {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
            border-bottom-right-radius: var(--radius-selector);
            border-bottom-left-radius: var(--radius-selector);
          }
          &:last-child {
            border-top-left-radius: var(--radius-selector);
            border-top-right-radius: var(--radius-selector);
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
          }
        }
      }
    }
    &:not(:has(.tw\:dui-timeline-middle)) {
      :first-child {
         > hr:last-child {
          border-top-left-radius: var(--radius-selector);
          border-top-right-radius: var(--radius-selector);
          border-bottom-right-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
      :last-child {
         > hr:first-child {
          border-top-left-radius: 0;
          border-top-right-radius: 0;
          border-bottom-right-radius: var(--radius-selector);
          border-bottom-left-radius: var(--radius-selector);
        }
      }
    }
    &.tw\:dui-timeline-snap-icon {
       > li {
        --dui-timeline-col-start: minmax(0, 1fr);
        --dui-timeline-row-start: 0.5rem;
      }
    }
  }
  .tw\:dui-timeline-compact {
    --dui-timeline-row-start: 0;
    .tw\:dui-timeline-start {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 3;
      grid-row-end: 4;
      align-self: flex-start;
      justify-self: center;
    }
    .tw\:dui-li:has(.tw\:dui-timeline-start) {
      .tw\:dui-timeline-end {
        grid-column-start: none;
        grid-row-start: auto;
      }
    }
    &.tw\:dui-timeline-vertical {
       > li {
        --dui-timeline-col-start: 0;
      }
      .tw\:dui-timeline-start {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 4;
        align-self: center;
        justify-self: flex-start;
      }
      .tw\:dui-li:has(.tw\:dui-timeline-start) {
        .tw\:dui-timeline-end {
          grid-column-start: auto;
          grid-row-start: none;
        }
      }
    }
  }
  .tw\:dui-stat-figure {
    grid-column-start: 2;
    grid-row: span 3 / span 3;
    grid-row-start: 1;
    place-self: center;
    justify-self: flex-end;
  }
  .tw\:dui-hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
    & > * {
      grid-column-start: 1;
      grid-row-start: 1;
    }
  }
  .tw\:dui-hero-overlay {
    grid-column-start: 1;
    grid-row-start: 1;
    height: 100%;
    width: 100%;
    background-color: var(--color-neutral);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral) 50%, transparent);
    }
  }
  .tw\:dui-modal-box {
    grid-column-start: 1;
    grid-row-start: 1;
    max-height: 100vh;
    width: calc(11/12 * 100%);
    max-width: 32rem;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 6);
    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
    border-top-left-radius: var(--dui-modal-tl, var(--radius-box));
    border-top-right-radius: var(--dui-modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--dui-modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--dui-modal-br, var(--radius-box));
    scale: 95%;
    opacity: 0;
    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .tw\:dui-drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: calc(0.25rem * 0);
  }
  .tw\:dui-timeline-middle {
    grid-column-start: 2;
    grid-row-start: 2;
  }
  .tw\:dui-drawer-end {
    grid-auto-columns: auto max-content;
     > .tw\:dui-drawer-toggle {
      & ~ .tw\:dui-drawer-content {
        grid-column-start: 1;
      }
      & ~ .tw\:dui-drawer-side {
        grid-column-start: 2;
        justify-items: end;
      }
      & ~ .tw\:dui-drawer-side > *:not(.tw\:dui-drawer-overlay) {
        translate: 100%;
        [dir="rtl"] & {
          translate: -100%;
        }
      }
      &:checked ~ .tw\:dui-drawer-side > *:not(.tw\:dui-drawer-overlay) {
        translate: 0%;
      }
    }
  }
  .tw\:dui-stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2rem;
    font-weight: 800;
  }
  .tw\:dui-stat-desc {
    grid-column-start: 1;
    white-space: nowrap;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
    font-size: 0.75rem;
  }
  .tw\:dui-stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
    font-size: 0.75rem;
  }
  .tw\:dui-stat-actions {
    grid-column-start: 1;
    white-space: nowrap;
  }
  .tw\:dui-chat-image {
    grid-row: span 2 / span 2;
    align-self: flex-end;
  }
  .tw\:dui-chat-footer {
    grid-row-start: 3;
    display: flex;
    gap: calc(0.25rem * 1);
    font-size: 0.6875rem;
  }
  .tw\:dui-chat-header {
    grid-row-start: 1;
    display: flex;
    gap: calc(0.25rem * 1);
    font-size: 0.6875rem;
  }
  .tw\:dui-list-col-wrap {
    grid-row-start: 2;
  }
  .tw\:float-right {
    float: right;
  }
  .tw\:dui-divider {
    display: flex;
    height: calc(0.25rem * 4);
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    white-space: nowrap;
    margin: var(--dui-divider-m, 1rem 0);
    --dui-divider-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-divider-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
    &:before, &:after {
      content: "";
      height: calc(0.25rem * 0.5);
      width: 100%;
      flex-grow: 1;
      background-color: var(--dui-divider-color);
    }
    @media print {
      &:before, &:after {
        border: 0.5px solid;
      }
    }
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
  }
  .tw\:dui-filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.tw\:dui-filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.tw\:dui-filter-reset))) {
      .tw\:dui-filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.tw\:dui-filter-reset)) {
      input:not(:checked, .tw\:dui-filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .tw\:dui-file-input-ghost {
    background-color: transparent;
    transition: background-color 0.2s;
    box-shadow: none;
    border-color: #0000;
    &::file-selector-button {
      margin-inline-start: calc(0.25rem * 0);
      margin-inline-end: calc(0.25rem * 4);
      height: 100%;
      cursor: pointer;
      padding-inline: calc(0.25rem * 4);
      webkit-user-select: none;
      user-select: none;
      margin-block: 0;
      border-start-end-radius: calc(var(--dui-join-ss, var(--radius-field) - var(--border)));
      border-end-end-radius: calc(var(--dui-join-es, var(--radius-field) - var(--border)));
    }
    &:focus, &:focus-within {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-color: #0000;
      box-shadow: none;
    }
  }
  .tw\:dui-input-lg {
    --dui-size: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .tw\:dui-input-md {
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .tw\:dui-input-sm {
    --dui-size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -2);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .tw\:dui-input-xl {
    --dui-size: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.375rem;
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -4);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .tw\:dui-input-xs {
    --dui-size: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.6875rem;
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -1);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .tw\:dui-label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentColor 60%, transparent);
    }
    &:has(input) {
      cursor: pointer;
    }
    &:is(.tw\:dui-input > *, .tw\:dui-select > *) {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      white-space: nowrap;
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
    }
  }
  .tw\:dui-steps-vertical {
    grid-auto-rows: 1fr;
    grid-auto-flow: row;
    .tw\:dui-step {
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      grid-template-columns: 40px 1fr;
      grid-template-rows: repeat(1, minmax(0, 1fr));
      grid-template-rows: auto;
      gap: 0.5rem;
      min-height: 4rem;
      justify-items: start;
      &:before {
        height: 100%;
        width: calc(0.25rem * 2);
        translate: -50% -50%;
        margin-inline-start: 50%;
      }
      [dir="rtl"] &:before {
        translate: 50% -50%;
      }
    }
  }
  .tw\:dui-steps-horizontal {
    grid-auto-columns: 1fr;
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    .tw\:dui-step {
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-columns: auto;
      grid-template-rows: repeat(2, minmax(0, 1fr));
      grid-template-rows: 40px 1fr;
      place-items: center;
      text-align: center;
      min-width: 4rem;
      &:before {
        height: calc(0.25rem * 2);
        width: 100%;
        translate: 0;
        content: "";
        margin-inline-start: -100%;
      }
      [dir="rtl"] &:before {
        translate: 0;
      }
    }
  }
  .tw\:dui-join-horizontal {
    flex-direction: row;
     > .tw\:dui-join-item:first-child {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: 0;
      --dui-join-es: var(--radius-field);
      --dui-join-ee: 0;
    }
    :first-child:not(:last-child) {
      .tw\:dui-join-item {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: 0;
        --dui-join-es: var(--radius-field);
        --dui-join-ee: 0;
      }
    }
     > .tw\:dui-join-item:last-child {
      --dui-join-ss: 0;
      --dui-join-se: var(--radius-field);
      --dui-join-es: 0;
      --dui-join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      .tw\:dui-join-item {
        --dui-join-ss: 0;
        --dui-join-se: var(--radius-field);
        --dui-join-es: 0;
        --dui-join-ee: var(--radius-field);
      }
    }
     > .tw\:dui-join-item:only-child {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: var(--radius-field);
      --dui-join-es: var(--radius-field);
      --dui-join-ee: var(--radius-field);
    }
    :only-child {
      .tw\:dui-join-item {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: var(--radius-field);
        --dui-join-es: var(--radius-field);
        --dui-join-ee: var(--radius-field);
      }
    }
    .tw\:dui-join-item {
      &:where(*:not(:first-child)) {
        margin-inline-start: calc(var(--border, 1px) * -1);
        margin-block-start: 0;
      }
    }
  }
  .tw\:dui-join-vertical {
    flex-direction: column;
     > .tw\:dui-join-item:first-child {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: var(--radius-field);
      --dui-join-es: 0;
      --dui-join-ee: 0;
    }
    :first-child:not(:last-child) {
      .tw\:dui-join-item {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: var(--radius-field);
        --dui-join-es: 0;
        --dui-join-ee: 0;
      }
    }
     > .tw\:dui-join-item:last-child {
      --dui-join-ss: 0;
      --dui-join-se: 0;
      --dui-join-es: var(--radius-field);
      --dui-join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      .tw\:dui-join-item {
        --dui-join-ss: 0;
        --dui-join-se: 0;
        --dui-join-es: var(--radius-field);
        --dui-join-ee: var(--radius-field);
      }
    }
     > .tw\:dui-join-item:only-child {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: var(--radius-field);
      --dui-join-es: var(--radius-field);
      --dui-join-ee: var(--radius-field);
    }
    :only-child {
      .tw\:dui-join-item {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: var(--radius-field);
        --dui-join-es: var(--radius-field);
        --dui-join-ee: var(--radius-field);
      }
    }
    .tw\:dui-join-item {
      &:where(*:not(:first-child)) {
        margin-inline-start: 0;
        margin-block-start: calc(var(--border, 1px) * -1);
      }
    }
  }
  .tw\:dui-join-item {
    &:where(*:not(:first-child, :disabled, [disabled], .tw\:dui-btn-disabled)) {
      margin-inline-start: calc(var(--border, 1px) * -1);
      margin-block-start: 0;
    }
    &:where(*:is(:disabled, [disabled], .tw\:dui-btn-disabled)) {
      border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
    }
  }
  .tw\:dui-modal-action {
    margin-top: calc(0.25rem * 6);
    display: flex;
    justify-content: flex-end;
    gap: calc(0.25rem * 2);
  }
  .tw\:dui-breadcrumbs {
    max-width: 100%;
    overflow-x: auto;
    padding-block: calc(0.25rem * 2);
    > menu, > ul, > ol {
      display: flex;
      min-height: min-content;
      align-items: center;
      white-space: nowrap;
       > li {
        display: flex;
        align-items: center;
         > * {
          display: flex;
          cursor: pointer;
          align-items: center;
          gap: calc(0.25rem * 2);
          &:hover {
            @media (hover: hover) {
              text-decoration-line: underline;
            }
          }
          &:focus {
            --tw-outline-style: none;
            outline-style: none;
            @media (forced-colors: active) {
              outline: 2px solid transparent;
              outline-offset: 2px;
            }
          }
          &:focus-visible {
            outline: 2px solid currentColor;
            outline-offset: 2px;
          }
        }
        & + *:before {
          content: "";
          margin-right: calc(0.25rem * 3);
          margin-left: calc(0.25rem * 2);
          display: block;
          height: calc(0.25rem * 1.5);
          width: calc(0.25rem * 1.5);
          opacity: 40%;
          rotate: 45deg;
          border-top: 1px solid;
          border-right: 1px solid;
          background-color: #0000;
        }
        [dir="rtl"] & + *:before {
          rotate: -135deg;
        }
      }
    }
  }
  .tw\:dui-fieldset-legend {
    margin-bottom: calc(0.25rem * -1);
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: calc(0.25rem * 2);
    padding-block: calc(0.25rem * 2);
    color: var(--color-base-content);
    font-weight: 600;
  }
  .tw\:dui-footer-title {
    margin-bottom: calc(0.25rem * 2);
    text-transform: uppercase;
    opacity: 60%;
    font-weight: 600;
  }
  .tw\:mb-1 {
    margin-bottom: calc(var(--tw-spacing) * 1);
  }
  .tw\:dui-carousel-item {
    box-sizing: content-box;
    display: flex;
    flex: none;
    scroll-snap-align: start;
  }
  .tw\:dui-status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in srgb, #000 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .tw\:dui-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--dui-badge-fg);
    border: var(--border) solid var(--dui-badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--dui-fx-noise);
    background-color: var(--dui-badge-bg);
    --dui-badge-bg: var(--dui-badge-color, var(--color-base-100));
    --dui-badge-fg: var(--color-base-content);
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--dui-size);
  }
  .tw\:dui-kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    background-color: var(--color-base-200);
    vertical-align: middle;
    padding-left: 0.5em;
    padding-right: 0.5em;
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    }
    border-bottom: calc(var(--border) + 1px) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    }
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    font-size: 0.875rem;
    height: var(--dui-size);
    min-width: var(--dui-size);
  }
  .tw\:dui-tabs {
    display: flex;
    flex-wrap: wrap;
    --dui-tabs-height: auto;
    --dui-tabs-direction: row;
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 10);
    height: var(--dui-tabs-height);
    flex-direction: var(--dui-tabs-direction);
  }
  .tw\:dui-navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .tw\:dui-footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
    & > * {
      display: grid;
      place-items: start;
      gap: calc(0.25rem * 2);
    }
    &.tw\:dui-footer-center {
      grid-auto-flow: column dense;
      place-items: center;
      text-align: center;
      & > * {
        place-items: center;
      }
    }
  }
  .tw\:dui-stat {
    display: inline-grid;
    width: 100%;
    column-gap: calc(0.25rem * 4);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
    &:not(:last-child) {
      border-inline-end: var(--border) dashed currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      }
      border-block-end: none;
    }
  }
  .tw\:dui-navbar-end {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-end;
  }
  .tw\:dui-navbar-start {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-start;
  }
  .tw\:dui-card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--dui-card-p, 1.5rem);
    font-size: var(--dui-card-fs, 0.875rem);
    :where(p) {
      flex-grow: 1;
    }
  }
  .tw\:dui-navbar-center {
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
  }
  .tw\:dui-fieldset-label {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
    &:has(input) {
      cursor: pointer;
    }
  }
  .tw\:dui-carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .tw\:dui-alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--dui-alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--dui-fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--dui-alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
    &:has(:nth-child(2)) {
      grid-template-columns: auto minmax(auto, 1fr);
    }
    &.tw\:dui-alert-outline {
      background-color: transparent;
      color: var(--dui-alert-color);
      box-shadow: none;
      background-image: none;
    }
    &.tw\:dui-alert-dash {
      background-color: transparent;
      color: var(--dui-alert-color);
      border-style: dashed;
      box-shadow: none;
      background-image: none;
    }
    &.tw\:dui-alert-soft {
      color: var(--dui-alert-color, var(--color-base-content));
      background: var(--dui-alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix( in oklab, var(--dui-alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: var(--dui-alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--dui-alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .tw\:dui-fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .tw\:dui-card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: calc(0.25rem * 2);
  }
  .tw\:dui-avatar-placeholder {
    & > div {
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
  .tw\:dui-card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--dui-cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .tw\:dui-join {
    display: inline-flex;
    align-items: stretch;
    --dui-join-ss: 0;
    --dui-join-se: 0;
    --dui-join-es: 0;
    --dui-join-ee: 0;
    :where(.tw\:dui-join-item) {
      border-start-start-radius: var(--dui-join-ss, 0);
      border-start-end-radius: var(--dui-join-se, 0);
      border-end-start-radius: var(--dui-join-es, 0);
      border-end-end-radius: var(--dui-join-ee, 0);
      * {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: var(--radius-field);
        --dui-join-es: var(--radius-field);
        --dui-join-ee: var(--radius-field);
      }
    }
     > .tw\:dui-join-item:where(:first-child) {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: 0;
      --dui-join-es: var(--radius-field);
      --dui-join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.tw\:dui-join-item) {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: 0;
        --dui-join-es: var(--radius-field);
        --dui-join-ee: 0;
      }
    }
     > .tw\:dui-join-item:where(:last-child) {
      --dui-join-ss: 0;
      --dui-join-se: var(--radius-field);
      --dui-join-es: 0;
      --dui-join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.tw\:dui-join-item) {
        --dui-join-ss: 0;
        --dui-join-se: var(--radius-field);
        --dui-join-es: 0;
        --dui-join-ee: var(--radius-field);
      }
    }
     > .tw\:dui-join-item:where(:only-child) {
      --dui-join-ss: var(--radius-field);
      --dui-join-se: var(--radius-field);
      --dui-join-es: var(--radius-field);
      --dui-join-ee: var(--radius-field);
    }
    :only-child {
      :where(.tw\:dui-join-item) {
        --dui-join-ss: var(--radius-field);
        --dui-join-se: var(--radius-field);
        --dui-join-es: var(--radius-field);
        --dui-join-ee: var(--radius-field);
      }
    }
  }
  .tw\:dui-mockup-phone {
    display: inline-grid;
    justify-items: center;
    border: 6px solid #6b6b6b;
    border-radius: 65px;
    background-color: #000;
    padding: 11px;
    overflow: hidden;
  }
  .tw\:dui-chat {
    display: grid;
    column-gap: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
    --dui-mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
  .tw\:dui-avatar-group {
    display: flex;
    overflow: hidden;
    :where(.tw\:dui-avatar) {
      overflow: hidden;
      border-radius: calc(infinity * 1px);
      border: 4px solid var(--color-base-100);
    }
  }
  .tw\:dui-prose {
    :root & {
      --tw-prose-body: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-hr: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-captions: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-td-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-kbd: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .tw\:dui-mask {
    display: inline-block;
    vertical-align: middle;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
  }
  .tw\:dui-divider-end {
    &:after {
      display: none;
    }
  }
  .tw\:dui-divider-start {
    &:before {
      display: none;
    }
  }
  .tw\:inline-flex {
    display: inline-flex;
  }
  .tw\:table {
    display: table;
  }
  .tw\:dui-modal-bottom {
    place-items: end;
    :where(.tw\:dui-modal-box) {
      height: auto;
      width: 100%;
      max-width: none;
      max-height: calc(100vh - 5em);
      translate: 0 100%;
      scale: 1;
      --dui-modal-tl: var(--radius-box);
      --dui-modal-tr: var(--radius-box);
      --dui-modal-bl: 0;
      --dui-modal-br: 0;
    }
  }
  .tw\:dui-modal-end {
    place-items: end;
    :where(.tw\:dui-modal-box) {
      height: 100vh;
      max-height: none;
      width: auto;
      max-width: none;
      translate: 100% 0;
      scale: 1;
      --dui-modal-tl: var(--radius-box);
      --dui-modal-tr: 0;
      --dui-modal-bl: var(--radius-box);
      --dui-modal-br: 0;
    }
  }
  .tw\:dui-modal-middle {
    place-items: center;
    :where(.tw\:dui-modal-box) {
      height: auto;
      width: calc(11/12 * 100%);
      max-width: 32rem;
      max-height: calc(100vh - 5em);
      translate: 0 2%;
      scale: 98%;
      --dui-modal-tl: var(--radius-box);
      --dui-modal-tr: var(--radius-box);
      --dui-modal-bl: var(--radius-box);
      --dui-modal-br: var(--radius-box);
    }
  }
  .tw\:dui-modal-start {
    place-items: start;
    :where(.tw\:dui-modal-box) {
      height: 100vh;
      max-height: none;
      width: auto;
      max-width: none;
      translate: -100% 0;
      scale: 1;
      --dui-modal-tl: 0;
      --dui-modal-tr: var(--radius-box);
      --dui-modal-bl: 0;
      --dui-modal-br: var(--radius-box);
    }
  }
  .tw\:dui-modal-top {
    place-items: start;
    :where(.tw\:dui-modal-box) {
      height: auto;
      width: 100%;
      max-width: none;
      max-height: calc(100vh - 5em);
      translate: 0 -100%;
      scale: 1;
      --dui-modal-tl: 0;
      --dui-modal-tr: 0;
      --dui-modal-bl: var(--radius-box);
      --dui-modal-br: var(--radius-box);
    }
  }
  .tw\:dui-card-side {
    align-items: stretch;
    flex-direction: row;
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: inherit;
    }
    figure > * {
      max-width: unset;
    }
    :where(figure > *) {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  .tw\:dui-divider-horizontal {
    --dui-divider-m: 0 1rem;
    &.tw\:dui-divider {
      height: auto;
      width: calc(0.25rem * 4);
      flex-direction: column;
      &:before {
        height: 100%;
        width: calc(0.25rem * 0.5);
      }
      &:after {
        height: 100%;
        width: calc(0.25rem * 0.5);
      }
    }
  }
  .tw\:dui-divider-vertical {
    --dui-divider-m: 1rem 0;
    &.tw\:dui-divider {
      height: calc(0.25rem * 4);
      width: auto;
      flex-direction: row;
      &:before {
        height: calc(0.25rem * 0.5);
        width: 100%;
      }
      &:after {
        height: calc(0.25rem * 0.5);
        width: 100%;
      }
    }
  }
  .tw\:dui-btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--dui-size);
    height: var(--dui-size);
  }
  .tw\:dui-btn-square {
    padding-inline: calc(0.25rem * 0);
    width: var(--dui-size);
    height: var(--dui-size);
  }
  .tw\:dui-status-lg {
    width: calc(0.25rem * 3);
    height: calc(0.25rem * 3);
  }
  .tw\:dui-status-md {
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
  }
  .tw\:dui-status-sm {
    width: calc(0.25rem * 1);
    height: calc(0.25rem * 1);
  }
  .tw\:dui-status-xl {
    width: calc(0.25rem * 4);
    height: calc(0.25rem * 4);
  }
  .tw\:dui-status-xs {
    width: calc(0.25rem * 0.5);
    height: calc(0.25rem * 0.5);
  }
  .tw\:dui-dock-md {
    height: 4rem;
    height: calc(4rem + env(safe-area-inset-bottom));
    .tw\:dui-dock-label {
      font-size: 0.6875rem;
    }
  }
  .tw\:dui-btn-wide {
    width: 100%;
    max-width: calc(0.25rem * 64);
  }
  .tw\:dui-cally {
    font-size: 0.7rem;
    &::part(container) {
      padding: 0.5rem 1rem;
      user-select: none;
    }
    ::part(th) {
      font-weight: normal;
      block-size: auto;
    }
    &::part(header) {
      direction: ltr;
    }
    ::part(head) {
      opacity: 0.5;
      font-size: 0.7rem;
    }
    &::part(button) {
      border-radius: var(--radius-field);
      border: none;
      padding: 0.5rem;
      background: #0000;
    }
    &::part(button):hover {
      background: var(--color-base-200);
    }
    ::part(day) {
      border-radius: var(--radius-field);
      font-size: 0.7rem;
    }
    ::part(button day today) {
      background: var(--color-primary);
      color: var(--color-primary-content);
    }
    ::part(selected) {
      color: var(--color-base-100);
      background: var(--color-base-content);
      border-radius: var(--radius-field);
    }
    ::part(range-inner) {
      border-radius: 0;
    }
    ::part(range-start) {
      border-start-end-radius: 0;
      border-end-end-radius: 0;
    }
    ::part(range-end) {
      border-start-start-radius: 0;
      border-end-start-radius: 0;
    }
    ::part(range-start range-end) {
      border-radius: var(--radius-field);
    }
    calendar-month {
      width: 100%;
    }
  }
  .tw\:dui-dock-active {
    &:after {
      width: calc(0.25rem * 10);
      background-color: currentColor;
      color: currentColor;
    }
  }
  .tw\:dui-rating-half {
    :where(*:not(.tw\:dui-rating-hidden)) {
      width: calc(0.25rem * 3);
    }
    &.tw\:dui-rating-xs *:not(.tw\:dui-rating-hidden) {
      width: calc(0.25rem * 2);
    }
    &.tw\:dui-rating-sm *:not(.tw\:dui-rating-hidden) {
      width: calc(0.25rem * 2.5);
    }
    &.tw\:dui-rating-md *:not(.tw\:dui-rating-hidden) {
      width: calc(0.25rem * 3);
    }
    &.tw\:dui-rating-lg *:not(.tw\:dui-rating-hidden) {
      width: .875rem;
    }
    &.tw\:dui-rating-xl *:not(.tw\:dui-rating-hidden) {
      width: calc(0.25rem * 4);
    }
  }
  .tw\:dui-btn-block {
    width: 100%;
  }
  .tw\:dui-loading-lg {
    width: calc(var(--size-selector, 0.25rem) * 7);
  }
  .tw\:dui-loading-md {
    width: calc(var(--size-selector, 0.25rem) * 6);
  }
  .tw\:dui-loading-sm {
    width: calc(var(--size-selector, 0.25rem) * 5);
  }
  .tw\:dui-loading-xl {
    width: calc(var(--size-selector, 0.25rem) * 8);
  }
  .tw\:dui-loading-xs {
    width: calc(var(--size-selector, 0.25rem) * 4);
  }
  .tw\:w-full {
    width: 100%;
  }
  .tw\:w-px {
    width: 1px;
  }
  .tw\:max-w-xs {
    max-width: var(--tw-container-xs);
  }
  .tw\:dui-swap-rotate {
    .tw\:dui-swap-on, input:indeterminate ~ .tw\:dui-swap-on {
      rotate: 45deg;
    }
    input:is(:checked, :indeterminate) ~ .tw\:dui-swap-on, &.tw\:dui-swap-active .tw\:dui-swap-on {
      rotate: 0deg;
    }
    input:is(:checked, :indeterminate) ~ .tw\:dui-swap-off, &.tw\:dui-swap-active .tw\:dui-swap-off {
      rotate: calc(45deg * -1);
    }
  }
  .tw\:dui-swap-flip {
    transform-style: preserve-3d;
    perspective: 20rem;
    .tw\:dui-swap-on, .tw\:dui-swap-indeterminate, input:indeterminate ~ .tw\:dui-swap-on {
      transform: rotateY(180deg);
      backface-visibility: hidden;
    }
    input:is(:checked, :indeterminate) ~ .tw\:dui-swap-on, &.tw\:dui-swap-active .tw\:dui-swap-on {
      transform: rotateY(0deg);
    }
    input:is(:checked, :indeterminate) ~ .tw\:dui-swap-off, &.tw\:dui-swap-active .tw\:dui-swap-off {
      transform: rotateY(-180deg);
      backface-visibility: hidden;
      opacity: 100%;
    }
  }
  .tw\:dui-skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-300);
    @media (prefers-reduced-motion: reduce) {
      transition-duration: 15s;
    }
    will-change: background-position;
    animation: skeleton 1.8s ease-in-out infinite;
    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .tw\:dui-link {
    cursor: pointer;
    text-decoration-line: underline;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
  .tw\:dui-carousel-horizontal {
    flex-direction: row;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
  }
  .tw\:dui-carousel-vertical {
    flex-direction: column;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
  }
  .tw\:dui-carousel-center {
    .tw\:dui-carousel-item {
      scroll-snap-align: center;
    }
  }
  .tw\:dui-carousel-end {
    .tw\:dui-carousel-item {
      scroll-snap-align: end;
    }
  }
  .tw\:dui-carousel-start {
    .tw\:dui-carousel-item {
      scroll-snap-align: start;
    }
  }
  .tw\:dui-alert-horizontal {
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    &:has(:nth-child(2)) {
      grid-template-columns: auto minmax(auto, 1fr);
    }
  }
  .tw\:dui-alert-vertical {
    justify-content: center;
    justify-items: center;
    grid-auto-flow: row;
    grid-template-columns: auto;
    text-align: center;
    &:has(:nth-child(2)) {
      grid-template-columns: auto;
    }
  }
  .tw\:dui-stats-horizontal {
    grid-auto-flow: column;
    overflow-x: auto;
    .tw\:dui-stat:not(:last-child) {
      border-inline-end: var(--border) dashed currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      }
      border-block-end: none;
    }
  }
  .tw\:dui-stats-vertical {
    grid-auto-flow: row;
    overflow-y: auto;
    .tw\:dui-stat:not(:last-child) {
      border-inline-end: none;
      border-block-end: var(--border) dashed currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      }
    }
  }
  .tw\:dui-footer-horizontal {
    grid-auto-flow: column;
    &.tw\:dui-footer-center {
      grid-auto-flow: row dense;
    }
  }
  .tw\:dui-footer-vertical {
    grid-auto-flow: row;
    &.tw\:dui-footer-center {
      grid-auto-flow: column dense;
    }
  }
  .tw\:dui-tabs-box {
    background-color: var(--color-base-200);
    padding: calc(0.25rem * 1);
    --dui-tabs-box-radius: calc(var(--radius-field) + var(--radius-field) + var(--radius-field));
    border-radius: calc(var(--radius-field) + min(0.25rem, var(--dui-tabs-box-radius)));
    box-shadow: 0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
    .tw\:dui-tab {
      border-radius: var(--radius-field);
      border-style: none;
      &:focus-visible, &:is(label:has(:checked:focus-visible)) {
        outline-offset: 2px;
      }
    }
    > :is(.tw\:dui-tab-active, [aria-selected="true"]):not(.tw\:dui-tab-disabled, [disabled]), > :is(input:checked), > :is(label:has(:checked)) {
      background-color: var(--dui-tab-bg, var(--color-base-100));
      box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px var(--color-neutral), 0 1px 6px -4px var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000), 0 1px 6px -4px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
      }
      @media (forced-colors: active) {
        border: 1px solid;
      }
    }
  }
  .tw\:dui-timeline-box {
    border: var(--border) solid;
    border-radius: var(--radius-box);
    border-color: var(--color-base-300);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    font-size: 0.75rem;
    box-shadow: 0 1px 2px 0 oklch(0% 0 0/0.05);
  }
  .tw\:dui-menu-lg {
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 1.5);
      font-size: 1.125rem;
    }
    .tw\:dui-menu-title {
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 3);
    }
  }
  .tw\:dui-menu-md {
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      font-size: 0.875rem;
    }
    .tw\:dui-menu-title {
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 2);
    }
  }
  .tw\:dui-menu-sm {
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2.5);
      padding-block: calc(0.25rem * 1);
      font-size: 0.75rem;
    }
    .tw\:dui-menu-title {
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 2);
    }
  }
  .tw\:dui-menu-xl {
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 5);
      padding-block: calc(0.25rem * 1.5);
      font-size: 1.375rem;
    }
    .tw\:dui-menu-title {
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 3);
    }
  }
  .tw\:dui-menu-xs {
    :where(li:not(.tw\:dui-menu-title) > *:not(ul, details, .tw\:dui-menu-title)), :where(li:not(.tw\:dui-menu-title) > details > summary:not(.tw\:dui-menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
      font-size: 0.6875rem;
    }
    .tw\:dui-menu-title {
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
    }
  }
  .tw\:dui-rounded-box {
    border-radius: var(--radius-box);
  }
  .tw\:dui-rounded-field {
    border-radius: var(--radius-field);
  }
  .tw\:dui-rounded-selector {
    border-radius: var(--radius-selector);
  }
  .tw\:rounded-box {
    border-radius: var(--radius-box);
  }
  .tw\:rounded-field {
    border-radius: var(--radius-field);
  }
  .tw\:rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .tw\:rounded-selector {
    border-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-t-box {
    border-top-left-radius: var(--radius-box);
    border-top-right-radius: var(--radius-box);
  }
  .tw\:dui-rounded-t-field {
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
  }
  .tw\:dui-rounded-t-selector {
    border-top-left-radius: var(--radius-selector);
    border-top-right-radius: var(--radius-selector);
  }
  .tw\:rounded-t-box {
    border-top-left-radius: var(--radius-box);
    border-top-right-radius: var(--radius-box);
  }
  .tw\:rounded-t-field {
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
  }
  .tw\:rounded-t-selector {
    border-top-left-radius: var(--radius-selector);
    border-top-right-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-l-box {
    border-top-left-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .tw\:dui-rounded-l-field {
    border-top-left-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .tw\:dui-rounded-l-selector {
    border-top-left-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .tw\:rounded-l-box {
    border-top-left-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .tw\:rounded-l-field {
    border-top-left-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .tw\:rounded-l-selector {
    border-top-left-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-tl-box {
    border-top-left-radius: var(--radius-box);
  }
  .tw\:dui-rounded-tl-field {
    border-top-left-radius: var(--radius-field);
  }
  .tw\:dui-rounded-tl-selector {
    border-top-left-radius: var(--radius-selector);
  }
  .tw\:rounded-tl-box {
    border-top-left-radius: var(--radius-box);
  }
  .tw\:rounded-tl-field {
    border-top-left-radius: var(--radius-field);
  }
  .tw\:rounded-tl-selector {
    border-top-left-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-r-box {
    border-top-right-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .tw\:dui-rounded-r-field {
    border-top-right-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .tw\:dui-rounded-r-selector {
    border-top-right-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .tw\:rounded-r-box {
    border-top-right-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .tw\:rounded-r-field {
    border-top-right-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .tw\:rounded-r-selector {
    border-top-right-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-tr-box {
    border-top-right-radius: var(--radius-box);
  }
  .tw\:dui-rounded-tr-field {
    border-top-right-radius: var(--radius-field);
  }
  .tw\:dui-rounded-tr-selector {
    border-top-right-radius: var(--radius-selector);
  }
  .tw\:rounded-tr-box {
    border-top-right-radius: var(--radius-box);
  }
  .tw\:rounded-tr-field {
    border-top-right-radius: var(--radius-field);
  }
  .tw\:rounded-tr-selector {
    border-top-right-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-b-box {
    border-bottom-left-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .tw\:dui-rounded-b-field {
    border-bottom-left-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .tw\:dui-rounded-b-selector {
    border-bottom-left-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .tw\:rounded-b-box {
    border-bottom-right-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .tw\:rounded-b-field {
    border-bottom-right-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .tw\:rounded-b-selector {
    border-bottom-right-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-br-box {
    border-bottom-right-radius: var(--radius-box);
  }
  .tw\:dui-rounded-br-field {
    border-bottom-right-radius: var(--radius-field);
  }
  .tw\:dui-rounded-br-selector {
    border-bottom-right-radius: var(--radius-selector);
  }
  .tw\:rounded-br-box {
    border-bottom-right-radius: var(--radius-box);
  }
  .tw\:rounded-br-field {
    border-bottom-right-radius: var(--radius-field);
  }
  .tw\:rounded-br-selector {
    border-bottom-right-radius: var(--radius-selector);
  }
  .tw\:dui-rounded-bl-box {
    border-bottom-left-radius: var(--radius-box);
  }
  .tw\:dui-rounded-bl-field {
    border-bottom-left-radius: var(--radius-field);
  }
  .tw\:dui-rounded-bl-selector {
    border-bottom-left-radius: var(--radius-selector);
  }
  .tw\:rounded-bl-box {
    border-bottom-left-radius: var(--radius-box);
  }
  .tw\:rounded-bl-field {
    border-bottom-left-radius: var(--radius-field);
  }
  .tw\:rounded-bl-selector {
    border-bottom-left-radius: var(--radius-selector);
  }
  .tw\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .tw\:dui-badge-dash {
    color: var(--dui-badge-color);
    --dui-badge-bg: #0000;
    background-image: none;
    border-color: currentColor;
    border-style: dashed;
  }
  .tw\:dui-btn-dash {
    &:not( .tw\:dui-btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled, :checked ) {
      --dui-btn-shadow: "";
      border-style: dashed;
      --dui-btn-bg: #0000;
      --dui-btn-fg: var(--dui-btn-color);
      --dui-btn-border: var(--dui-btn-color);
      --dui-btn-noise: none;
    }
    @media (hover: none) {
      &:hover:not( .tw\:dui-btn-active, :active, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled, :checked ) {
        --dui-btn-shadow: "";
        border-style: dashed;
        --dui-btn-bg: #0000;
        --dui-btn-fg: var(--dui-btn-color);
        --dui-btn-border: var(--dui-btn-color);
        --dui-btn-noise: none;
      }
    }
  }
  .tw\:dui-badge-ghost {
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
    background-image: none;
  }
  .tw\:dui-badge-soft {
    color: var(--dui-badge-color, var(--color-base-content));
    background-color: var(--dui-badge-color, var(--color-base-content));
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix( in oklab, var(--dui-badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
    }
    border-color: var(--dui-badge-color, var(--color-base-content));
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix( in oklab, var(--dui-badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
    }
    background-image: none;
  }
  .tw\:dui-select-ghost {
    background-color: transparent;
    transition: background-color 0.2s;
    box-shadow: none;
    border-color: #0000;
    &:focus, &:focus-within {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-color: #0000;
      box-shadow: none;
    }
  }
  .tw\:dui-input-ghost {
    background-color: transparent;
    box-shadow: none;
    border-color: #0000;
    &:focus, &:focus-within {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-color: #0000;
      box-shadow: none;
    }
  }
  .tw\:dui-textarea-ghost {
    background-color: transparent;
    box-shadow: none;
    border-color: #0000;
    &:focus, &:focus-within {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-color: #0000;
      box-shadow: none;
    }
  }
  .tw\:dui-badge-outline {
    color: var(--dui-badge-color);
    --dui-badge-bg: #0000;
    background-image: none;
    border-color: currentColor;
  }
  .tw\:dui-alert-error {
    border-color: var(--color-error);
    color: var(--color-error-content);
    --dui-alert-color: var(--color-error);
  }
  .tw\:dui-alert-info {
    border-color: var(--color-info);
    color: var(--color-info-content);
    --dui-alert-color: var(--color-info);
  }
  .tw\:dui-alert-success {
    border-color: var(--color-success);
    color: var(--color-success-content);
    --dui-alert-color: var(--color-success);
  }
  .tw\:dui-alert-warning {
    border-color: var(--color-warning);
    color: var(--color-warning-content);
    --dui-alert-color: var(--color-warning);
  }
  .tw\:border-accent {
    border-color: var(--color-accent);
  }
  .tw\:border-accent-content {
    border-color: var(--color-accent-content);
  }
  .tw\:border-base-100 {
    border-color: var(--color-base-100);
  }
  .tw\:border-base-200 {
    border-color: var(--color-base-200);
  }
  .tw\:border-base-300 {
    border-color: var(--color-base-300);
  }
  .tw\:border-base-content {
    border-color: var(--color-base-content);
  }
  .tw\:border-error {
    border-color: var(--color-error);
  }
  .tw\:border-error-content {
    border-color: var(--color-error-content);
  }
  .tw\:border-info {
    border-color: var(--color-info);
  }
  .tw\:border-info-content {
    border-color: var(--color-info-content);
  }
  .tw\:border-neutral {
    border-color: var(--color-neutral);
  }
  .tw\:border-neutral-content {
    border-color: var(--color-neutral-content);
  }
  .tw\:border-primary {
    border-color: var(--color-primary);
  }
  .tw\:border-primary-content {
    border-color: var(--color-primary-content);
  }
  .tw\:border-secondary {
    border-color: var(--color-secondary);
  }
  .tw\:border-secondary-content {
    border-color: var(--color-secondary-content);
  }
  .tw\:border-success {
    border-color: var(--color-success);
  }
  .tw\:border-success-content {
    border-color: var(--color-success-content);
  }
  .tw\:border-warning {
    border-color: var(--color-warning);
  }
  .tw\:border-warning-content {
    border-color: var(--color-warning-content);
  }
  .tw\:dui-glass {
    border: none;
    backdrop-filter: blur(var(--dui-glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--dui-glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--dui-glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--dui-glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--dui-glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--dui-glass-text-shadow-opacity, 5%));
  }
  .tw\:dui-chat-bubble-accent {
    background-color: var(--color-accent);
    color: var(--color-accent-content);
  }
  .tw\:dui-chat-bubble-error {
    background-color: var(--color-error);
    color: var(--color-error-content);
  }
  .tw\:dui-chat-bubble-info {
    background-color: var(--color-info);
    color: var(--color-info-content);
  }
  .tw\:dui-chat-bubble-neutral {
    background-color: var(--color-neutral);
    color: var(--color-neutral-content);
  }
  .tw\:dui-chat-bubble-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .tw\:dui-chat-bubble-secondary {
    background-color: var(--color-secondary);
    color: var(--color-secondary-content);
  }
  .tw\:dui-chat-bubble-success {
    background-color: var(--color-success);
    color: var(--color-success-content);
  }
  .tw\:dui-chat-bubble-warning {
    background-color: var(--color-warning);
    color: var(--color-warning-content);
  }
  .tw\:dui-status-accent {
    background-color: var(--color-accent);
    color: var(--color-accent);
  }
  .tw\:dui-status-error {
    background-color: var(--color-error);
    color: var(--color-error);
  }
  .tw\:dui-status-info {
    background-color: var(--color-info);
    color: var(--color-info);
  }
  .tw\:dui-status-neutral {
    background-color: var(--color-neutral);
    color: var(--color-neutral);
  }
  .tw\:dui-status-primary {
    background-color: var(--color-primary);
    color: var(--color-primary);
  }
  .tw\:dui-status-secondary {
    background-color: var(--color-secondary);
    color: var(--color-secondary);
  }
  .tw\:dui-status-success {
    background-color: var(--color-success);
    color: var(--color-success);
  }
  .tw\:dui-status-warning {
    background-color: var(--color-warning);
    color: var(--color-warning);
  }
  .tw\:dui-table-zebra {
    tbody {
      tr {
        &:where(:nth-child(even)) {
          background-color: var(--color-base-200);
          :where(.tw\:dui-table-pin-cols tr th) {
            background-color: var(--color-base-200);
          }
        }
        &.tw\:dui-row-hover {
          &, &:where(:nth-child(even)) {
            &:hover {
              @media (hover: hover) {
                background-color: var(--color-base-300);
              }
            }
          }
        }
      }
    }
  }
  .tw\:bg-accent {
    background-color: var(--color-accent);
  }
  .tw\:bg-accent-content {
    background-color: var(--color-accent-content);
  }
  .tw\:bg-base-100 {
    background-color: var(--color-base-100);
  }
  .tw\:bg-base-200 {
    background-color: var(--color-base-200);
  }
  .tw\:bg-base-300 {
    background-color: var(--color-base-300);
  }
  .tw\:bg-base-content {
    background-color: var(--color-base-content);
  }
  .tw\:bg-error {
    background-color: var(--color-error);
  }
  .tw\:bg-error-content {
    background-color: var(--color-error-content);
  }
  .tw\:bg-info {
    background-color: var(--color-info);
  }
  .tw\:bg-info-content {
    background-color: var(--color-info-content);
  }
  .tw\:bg-neutral {
    background-color: var(--color-neutral);
  }
  .tw\:bg-neutral-content {
    background-color: var(--color-neutral-content);
  }
  .tw\:bg-primary {
    background-color: var(--color-primary);
  }
  .tw\:bg-primary-content {
    background-color: var(--color-primary-content);
  }
  .tw\:bg-secondary {
    background-color: var(--color-secondary);
  }
  .tw\:bg-secondary-content {
    background-color: var(--color-secondary-content);
  }
  .tw\:bg-success {
    background-color: var(--color-success);
  }
  .tw\:bg-success-content {
    background-color: var(--color-success-content);
  }
  .tw\:bg-warning {
    background-color: var(--color-warning);
  }
  .tw\:bg-warning-content {
    background-color: var(--color-warning-content);
  }
  .tw\:dui-divider-accent {
    &:before, &:after {
      background-color: var(--color-accent);
    }
  }
  .tw\:dui-divider-error {
    &:before, &:after {
      background-color: var(--color-error);
    }
  }
  .tw\:dui-divider-info {
    &:before, &:after {
      background-color: var(--color-info);
    }
  }
  .tw\:dui-divider-neutral {
    &:before, &:after {
      background-color: var(--color-neutral);
    }
  }
  .tw\:dui-divider-primary {
    &:before, &:after {
      background-color: var(--color-primary);
    }
  }
  .tw\:dui-divider-secondary {
    &:before, &:after {
      background-color: var(--color-secondary);
    }
  }
  .tw\:dui-divider-success {
    &:before, &:after {
      background-color: var(--color-success);
    }
  }
  .tw\:dui-divider-warning {
    &:before, &:after {
      background-color: var(--color-warning);
    }
  }
  .tw\:dui-loading-ball {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cellipse cx='12' cy='5' rx='4' ry='4'%3E%3Canimate attributeName='cy' values='5;20;20.5;20;5' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3Canimate attributeName='rx' values='4;4;4.8;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='ry' values='4;4;3;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3C/ellipse%3E%3C/svg%3E");
  }
  .tw\:dui-loading-bars {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
  }
  .tw\:dui-loading-dots {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
  }
  .tw\:dui-loading-infinity {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
  }
  .tw\:dui-loading-ring {
    mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .tw\:dui-loading-spinner {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .tw\:dui-mask-circle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-decagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-diamond {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-heart {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-hexagon {
    mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-hexagon-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-pentagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-squircle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-star {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-star-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-triangle {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-triangle-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-triangle-3 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:dui-mask-triangle-4 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .tw\:mask-circle {
    --tw-mask-radial-shape: circle;
  }
  .tw\:dui-mask-half-1 {
    mask-size: 200%;
    mask-position: left;
    mask-position: left;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      mask-position: right;
    }
  }
  .tw\:dui-mask-half-2 {
    mask-size: 200%;
    mask-position: right;
    mask-position: right;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      mask-position: left;
    }
  }
  .tw\:dui-checkbox-lg {
    padding: 0.3125rem;
    --dui-size: calc(var(--size-selector, 0.25rem) * 7);
  }
  .tw\:dui-checkbox-md {
    padding: 0.25rem;
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
  }
  .tw\:dui-checkbox-sm {
    padding: 0.1875rem;
    --dui-size: calc(var(--size-selector, 0.25rem) * 5);
  }
  .tw\:dui-checkbox-xl {
    padding: 0.375rem;
    --dui-size: calc(var(--size-selector, 0.25rem) * 8);
  }
  .tw\:dui-checkbox-xs {
    padding: 0.125rem;
    --dui-size: calc(var(--size-selector, 0.25rem) * 4);
  }
  .tw\:dui-radio-lg {
    padding: 0.3125rem;
    &:is([type="radio"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 7);
    }
  }
  .tw\:dui-radio-md {
    padding: 0.25rem;
    &:is([type="radio"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .tw\:dui-radio-sm {
    padding: 0.1875rem;
    &:is([type="radio"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 5);
    }
  }
  .tw\:dui-radio-xl {
    padding: 0.375rem;
    &:is([type="radio"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .tw\:dui-radio-xs {
    padding: 0.125rem;
    &:is([type="radio"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 4);
    }
  }
  .tw\:p-1 {
    padding: calc(var(--tw-spacing) * 1);
  }
  .tw\:dui-menu-title {
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 2);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
    font-size: 0.875rem;
    font-weight: 600;
  }
  .tw\:dui-table-lg {
    :not(thead, tfoot) tr {
      font-size: 1.125rem;
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 5);
      padding-block: calc(0.25rem * 4);
    }
  }
  .tw\:dui-table-md {
    :not(thead, tfoot) tr {
      font-size: 0.875rem;
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
    }
  }
  .tw\:dui-table-sm {
    :not(thead, tfoot) tr {
      font-size: 0.75rem;
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 2);
    }
  }
  .tw\:dui-table-xl {
    :not(thead, tfoot) tr {
      font-size: 1.375rem;
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 5);
    }
  }
  .tw\:dui-table-xs {
    :not(thead, tfoot) tr {
      font-size: 0.6875rem;
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
    }
  }
  .tw\:dui-badge-lg {
    --dui-size: calc(var(--size-selector, 0.25rem) * 7);
    font-size: 1rem;
    padding-inline: calc(0.25rem * 3.5 - var(--border));
  }
  .tw\:dui-badge-md {
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    font-size: 0.875rem;
    padding-inline: calc(0.25rem * 3 - var(--border));
  }
  .tw\:dui-badge-sm {
    --dui-size: calc(var(--size-selector, 0.25rem) * 5);
    font-size: 0.75rem;
    padding-inline: calc(0.25rem * 2.5 - var(--border));
  }
  .tw\:dui-badge-xl {
    --dui-size: calc(var(--size-selector, 0.25rem) * 8);
    font-size: 1.125rem;
    padding-inline: calc(0.25rem * 4 - var(--border));
  }
  .tw\:dui-badge-xs {
    --dui-size: calc(var(--size-selector, 0.25rem) * 4);
    font-size: 0.625rem;
    padding-inline: calc(0.25rem * 2 - var(--border));
  }
  .tw\:dui-file-input-xl {
    padding-inline-end: calc(0.25rem * 6);
    --dui-size: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.125rem;
    line-height: 3rem;
    &::file-selector-button {
      font-size: 1.375rem;
    }
  }
  .tw\:dui-file-input-lg {
    --dui-size: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
    line-height: 2.5rem;
    &::file-selector-button {
      font-size: 1.125rem;
    }
  }
  .tw\:dui-file-input-md {
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    line-height: 2;
    &::file-selector-button {
      font-size: 0.875rem;
    }
  }
  .tw\:dui-file-input-sm {
    --dui-size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
    line-height: 1.5rem;
    &::file-selector-button {
      font-size: 0.75rem;
    }
  }
  .tw\:dui-file-input-xs {
    --dui-size: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.6875rem;
    line-height: 1rem;
    &::file-selector-button {
      font-size: 0.6875rem;
    }
  }
  .tw\:text-2xl {
    font-size: var(--tw-text-2xl);
    line-height: var(--tw-leading, var(--tw-text-2xl--line-height));
  }
  .tw\:dui-tabs-lg {
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 12);
    :where(.tw\:dui-tab) {
      font-size: 1.125rem;
      --dui-tab-p: 1rem;
      --dui-tab-radius-min: calc(1.5rem - var(--border));
    }
  }
  .tw\:dui-tabs-md {
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 10);
    :where(.tw\:dui-tab) {
      font-size: 0.875rem;
      --dui-tab-p: 0.75rem;
      --dui-tab-radius-min: calc(0.75rem - var(--border));
    }
  }
  .tw\:dui-tabs-sm {
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 8);
    :where(.tw\:dui-tab) {
      font-size: 0.875rem;
      --dui-tab-p: 0.5rem;
      --dui-tab-radius-min: calc(0.5rem - var(--border));
    }
  }
  .tw\:dui-tabs-xl {
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 14);
    :where(.tw\:dui-tab) {
      font-size: 1.125rem;
      --dui-tab-p: 1.25rem;
      --dui-tab-radius-min: calc(2rem - var(--border));
    }
  }
  .tw\:dui-tabs-xs {
    --dui-tab-height: calc(var(--size-field, 0.25rem) * 6);
    :where(.tw\:dui-tab) {
      font-size: 0.75rem;
      --dui-tab-p: 0.375rem;
      --dui-tab-radius-min: calc(0.5rem - var(--border));
    }
  }
  .tw\:dui-kbd-lg {
    --dui-size: calc(var(--size-selector, 0.25rem) * 7);
    font-size: 1rem;
  }
  .tw\:dui-kbd-md {
    --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    font-size: 0.875rem;
  }
  .tw\:dui-kbd-sm {
    --dui-size: calc(var(--size-selector, 0.25rem) * 5);
    font-size: 0.75rem;
  }
  .tw\:dui-kbd-xl {
    --dui-size: calc(var(--size-selector, 0.25rem) * 8);
    font-size: 1.125rem;
  }
  .tw\:dui-kbd-xs {
    --dui-size: calc(var(--size-selector, 0.25rem) * 4);
    font-size: 0.625rem;
  }
  .tw\:dui-select-lg {
    --dui-size: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
  }
  .tw\:dui-select-md {
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
  }
  .tw\:dui-select-sm {
    --dui-size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
  }
  .tw\:dui-select-xl {
    --dui-size: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.375rem;
  }
  .tw\:dui-select-xs {
    --dui-size: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.6875rem;
  }
  .tw\:dui-textarea-lg {
    font-size: 1.125rem;
  }
  .tw\:dui-textarea-md {
    font-size: 0.875rem;
  }
  .tw\:dui-textarea-sm {
    font-size: 0.75rem;
  }
  .tw\:dui-textarea-xl {
    font-size: 1.375rem;
  }
  .tw\:dui-textarea-xs {
    font-size: 0.6875rem;
  }
  .tw\:dui-file-input-accent {
    --dui-btn-color: var(--color-accent);
    &::file-selector-button {
      color: var(--color-accent-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-accent);
    }
  }
  .tw\:dui-file-input-error {
    --dui-btn-color: var(--color-error);
    &::file-selector-button {
      color: var(--color-error-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-error);
    }
  }
  .tw\:dui-file-input-info {
    --dui-btn-color: var(--color-info);
    &::file-selector-button {
      color: var(--color-info-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-info);
    }
  }
  .tw\:dui-file-input-neutral {
    --dui-btn-color: var(--color-neutral);
    &::file-selector-button {
      color: var(--color-neutral-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-neutral);
    }
  }
  .tw\:dui-file-input-primary {
    --dui-btn-color: var(--color-primary);
    &::file-selector-button {
      color: var(--color-primary-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-primary);
    }
  }
  .tw\:dui-file-input-secondary {
    --dui-btn-color: var(--color-secondary);
    &::file-selector-button {
      color: var(--color-secondary-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-secondary);
    }
  }
  .tw\:dui-file-input-success {
    --dui-btn-color: var(--color-success);
    &::file-selector-button {
      color: var(--color-success-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-success);
    }
  }
  .tw\:dui-file-input-warning {
    --dui-btn-color: var(--color-warning);
    &::file-selector-button {
      color: var(--color-warning-content);
    }
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-warning);
    }
  }
  .tw\:dui-checkbox-accent {
    color: var(--color-accent-content);
    --dui-input-color: var(--color-accent);
  }
  .tw\:dui-checkbox-error {
    color: var(--color-error-content);
    --dui-input-color: var(--color-error);
  }
  .tw\:dui-checkbox-info {
    color: var(--color-info-content);
    --dui-input-color: var(--color-info);
  }
  .tw\:dui-checkbox-neutral {
    color: var(--color-neutral-content);
    --dui-input-color: var(--color-neutral);
  }
  .tw\:dui-checkbox-primary {
    color: var(--color-primary-content);
    --dui-input-color: var(--color-primary);
  }
  .tw\:dui-checkbox-secondary {
    color: var(--color-secondary-content);
    --dui-input-color: var(--color-secondary);
  }
  .tw\:dui-checkbox-success {
    color: var(--color-success-content);
    --dui-input-color: var(--color-success);
  }
  .tw\:dui-checkbox-warning {
    color: var(--color-warning-content);
    --dui-input-color: var(--color-warning);
  }
  .tw\:dui-link-accent {
    color: var(--color-accent);
    @media (hover: hover) {
      &:hover {
        color: var(--color-accent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-accent) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-error {
    color: var(--color-error);
    @media (hover: hover) {
      &:hover {
        color: var(--color-error);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-error) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-info {
    color: var(--color-info);
    @media (hover: hover) {
      &:hover {
        color: var(--color-info);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-info) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-neutral {
    color: var(--color-neutral);
    @media (hover: hover) {
      &:hover {
        color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-neutral) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-primary {
    color: var(--color-primary);
    @media (hover: hover) {
      &:hover {
        color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-primary) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-secondary {
    color: var(--color-secondary);
    @media (hover: hover) {
      &:hover {
        color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-secondary) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-success {
    color: var(--color-success);
    @media (hover: hover) {
      &:hover {
        color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-success) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-link-warning {
    color: var(--color-warning);
    @media (hover: hover) {
      &:hover {
        color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-warning) 80%, #000);
        }
      }
    }
  }
  .tw\:dui-range-accent {
    color: var(--color-accent);
    --dui-range-thumb: var(--color-accent-content);
  }
  .tw\:dui-range-error {
    color: var(--color-error);
    --dui-range-thumb: var(--color-error-content);
  }
  .tw\:dui-range-info {
    color: var(--color-info);
    --dui-range-thumb: var(--color-info-content);
  }
  .tw\:dui-range-neutral {
    color: var(--color-neutral);
    --dui-range-thumb: var(--color-neutral-content);
  }
  .tw\:dui-range-primary {
    color: var(--color-primary);
    --dui-range-thumb: var(--color-primary-content);
  }
  .tw\:dui-range-secondary {
    color: var(--color-secondary);
    --dui-range-thumb: var(--color-secondary-content);
  }
  .tw\:dui-range-success {
    color: var(--color-success);
    --dui-range-thumb: var(--color-success-content);
  }
  .tw\:dui-range-warning {
    color: var(--color-warning);
    --dui-range-thumb: var(--color-warning-content);
  }
  .tw\:dui-tooltip-accent {
    --dui-tt-bg: var(--color-accent);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-accent-content);
    }
  }
  .tw\:dui-tooltip-error {
    --dui-tt-bg: var(--color-error);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-error-content);
    }
  }
  .tw\:dui-tooltip-info {
    --dui-tt-bg: var(--color-info);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-info-content);
    }
  }
  .tw\:dui-tooltip-primary {
    --dui-tt-bg: var(--color-primary);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-primary-content);
    }
  }
  .tw\:dui-tooltip-secondary {
    --dui-tt-bg: var(--color-secondary);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-secondary-content);
    }
  }
  .tw\:dui-tooltip-success {
    --dui-tt-bg: var(--color-success);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-success-content);
    }
  }
  .tw\:dui-tooltip-warning {
    --dui-tt-bg: var(--color-warning);
    > .tw\:dui-tooltip-content, &[data-tip]:before {
      color: var(--color-warning-content);
    }
  }
  .tw\:dui-progress-accent {
    color: var(--color-accent);
  }
  .tw\:dui-progress-error {
    color: var(--color-error);
  }
  .tw\:dui-progress-info {
    color: var(--color-info);
  }
  .tw\:dui-progress-neutral {
    color: var(--color-neutral);
  }
  .tw\:dui-progress-primary {
    color: var(--color-primary);
  }
  .tw\:dui-progress-secondary {
    color: var(--color-secondary);
  }
  .tw\:dui-progress-success {
    color: var(--color-success);
  }
  .tw\:dui-progress-warning {
    color: var(--color-warning);
  }
  .tw\:text-accent {
    color: var(--color-accent);
  }
  .tw\:text-accent-content {
    color: var(--color-accent-content);
  }
  .tw\:text-base-100 {
    color: var(--color-base-100);
  }
  .tw\:text-base-200 {
    color: var(--color-base-200);
  }
  .tw\:text-base-300 {
    color: var(--color-base-300);
  }
  .tw\:text-base-content {
    color: var(--color-base-content);
  }
  .tw\:text-error {
    color: var(--color-error);
  }
  .tw\:text-error-content {
    color: var(--color-error-content);
  }
  .tw\:text-info {
    color: var(--color-info);
  }
  .tw\:text-info-content {
    color: var(--color-info-content);
  }
  .tw\:text-neutral {
    color: var(--color-neutral);
  }
  .tw\:text-neutral-content {
    color: var(--color-neutral-content);
  }
  .tw\:text-primary {
    color: var(--color-primary);
  }
  .tw\:text-primary-content {
    color: var(--color-primary-content);
  }
  .tw\:text-secondary {
    color: var(--color-secondary);
  }
  .tw\:text-secondary-content {
    color: var(--color-secondary-content);
  }
  .tw\:text-success {
    color: var(--color-success);
  }
  .tw\:text-success-content {
    color: var(--color-success-content);
  }
  .tw\:text-warning {
    color: var(--color-warning);
  }
  .tw\:text-warning-content {
    color: var(--color-warning-content);
  }
  .tw\:dui-btn-link {
    text-decoration-line: underline;
    outline-color: currentColor;
    --dui-btn-border: #0000;
    --dui-btn-bg: #0000;
    --dui-btn-fg: var(--color-primary);
    --dui-btn-noise: none;
    --dui-btn-shadow: "";
    &:is(.tw\:dui-btn-active, :hover, :active:focus, :focus-visible) {
      text-decoration-line: underline;
      --dui-btn-border: #0000;
      --dui-btn-bg: #0000;
    }
    @media (hover: none) {
      &:hover:not(.tw\:dui-btn-active, :active, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled) {
        text-decoration-line: none;
      }
    }
  }
  .tw\:dui-link-hover {
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .tw\:dui-swap-active {
    .tw\:dui-swap-off {
      opacity: 0%;
    }
    .tw\:dui-swap-on {
      opacity: 100%;
    }
  }
  .tw\:opacity-50 {
    opacity: 50%;
  }
  .tw\:shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:dui-btn-ghost {
    &:not(.tw\:dui-btn-active, :hover, :active:focus, :focus-visible) {
      --dui-btn-shadow: "";
      --dui-btn-bg: #0000;
      --dui-btn-border: #0000;
      --dui-btn-noise: none;
      &:not(:disabled, [disabled], .tw\:dui-btn-disabled) {
        outline-color: currentColor;
        --dui-btn-fg: currentColor;
      }
    }
    @media (hover: none) {
      &:hover:not(.tw\:dui-btn-active, :active, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled) {
        --dui-btn-shadow: "";
        --dui-btn-bg: #0000;
        --dui-btn-border: #0000;
        --dui-btn-noise: none;
        --dui-btn-fg: currentColor;
      }
    }
  }
  .tw\:filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .tw\:dui-tabs-bottom {
    --dui-tabs-height: auto;
    --dui-tabs-direction: row;
    .tw\:dui-tab {
      --dui-tab-order: 1;
      --dui-tab-border: var(--border) 0 0 0;
      --dui-tab-radius-ss: 0;
      --dui-tab-radius-se: 0;
      --dui-tab-radius-es: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-radius-ee: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-border-colors: var(--dui-tab-border-color) #0000 #0000 #0000;
      --dui-tab-paddings: 0 var(--dui-tab-p) var(--border) var(--dui-tab-p);
      --dui-tab-corner-width: calc(100% + min(var(--radius-field), var(--dui-tab-radius-min)) * 2);
      --dui-tab-corner-height: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-corner-position: top left, top right;
      &:is(.tw\:dui-tab-active, [aria-selected="true"]):not(.tw\:dui-tab-disabled, [disabled]), &:is(input:checked), &:is(label:has(:checked)) {
        --dui-tab-border: 0 var(--border) var(--border) var(--border);
        --dui-tab-border-colors: #0000 var(--dui-tab-border-color) var(--dui-tab-border-color)
        var(--dui-tab-border-color);
        --dui-tab-paddings: var(--border) calc(var(--dui-tab-p) - var(--border)) 0
        calc(var(--dui-tab-p) - var(--border));
        --dui-tab-inset: 0 auto auto auto;
        --radius-start: radial-gradient(
        circle at bottom left,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
        --radius-end: radial-gradient(
        circle at bottom right,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
      }
    }
    &:has(.tw\:dui-tab-content) {
       > .tw\:dui-tab:first-child {
        &:not(.tw\:dui-tab-active, [aria-selected="true"]) {
          --dui-tab-border-colors: #0000 var(--dui-tab-border-color) var(--dui-tab-border-color)
          var(--dui-tab-border-color);
        }
      }
    }
    .tw\:dui-tab-content {
      --dui-tabcontent-order: 0;
      --dui-tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
      --dui-tabcontent-radius-ss: var(--radius-box);
      --dui-tabcontent-radius-se: var(--radius-box);
      --dui-tabcontent-radius-es: 0;
      --dui-tabcontent-radius-ee: var(--radius-box);
    }
    > :checked, > :is(label:has(:checked)), > :is(.tw\:dui-tab-active, [aria-selected="true"]) {
      & + .tw\:dui-tab-content:not(:nth-child(2)) {
        --dui-tabcontent-radius-es: var(--radius-box);
      }
    }
  }
  .tw\:dui-tabs-top {
    --dui-tabs-height: auto;
    --dui-tabs-direction: row;
    .tw\:dui-tab {
      --dui-tab-order: 0;
      --dui-tab-border: 0 0 var(--border) 0;
      --dui-tab-radius-ss: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-radius-se: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-radius-es: 0;
      --dui-tab-radius-ee: 0;
      --dui-tab-paddings: var(--border) var(--dui-tab-p) 0 var(--dui-tab-p);
      --dui-tab-border-colors: #0000 #0000 var(--dui-tab-border-color) #0000;
      --dui-tab-corner-width: calc(100% + min(var(--radius-field), var(--dui-tab-radius-min)) * 2);
      --dui-tab-corner-height: min(var(--radius-field), var(--dui-tab-radius-min));
      --dui-tab-corner-position: top left, top right;
      &:is(.tw\:dui-tab-active, [aria-selected="true"]):not(.tw\:dui-tab-disabled, [disabled]), &:is(input:checked), &:is(label:has(:checked)) {
        --dui-tab-border: var(--border) var(--border) 0 var(--border);
        --dui-tab-border-colors: var(--dui-tab-border-color) var(--dui-tab-border-color) #0000
        var(--dui-tab-border-color);
        --dui-tab-paddings: 0 calc(var(--dui-tab-p) - var(--border)) var(--border)
        calc(var(--dui-tab-p) - var(--border));
        --dui-tab-inset: auto auto 0 auto;
        --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
        --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--dui-tab-grad),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + 0.25px),
        var(--dui-tab-border-color) calc(var(--dui-tab-grad) + var(--border)),
        var(--dui-tab-bg) calc(var(--dui-tab-grad) + var(--border) + 0.25px)
      );
      }
    }
    &:has(.tw\:dui-tab-content) {
       > .tw\:dui-tab:first-child {
        &:not(.tw\:dui-tab-active, [aria-selected="true"]) {
          --dui-tab-border-colors: var(--dui-tab-border-color) var(--dui-tab-border-color) #0000
          var(--dui-tab-border-color);
        }
      }
    }
    .tw\:dui-tab-content {
      --dui-tabcontent-order: 1;
      --dui-tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
      --dui-tabcontent-radius-ss: 0;
      --dui-tabcontent-radius-se: var(--radius-box);
      --dui-tabcontent-radius-es: var(--radius-box);
      --dui-tabcontent-radius-ee: var(--radius-box);
    }
    :checked, label:has(:checked), :is(.tw\:dui-tab-active, [aria-selected="true"]) {
      & + .tw\:dui-tab-content {
        &:nth-child(1), &:nth-child(n + 3) {
          --dui-tabcontent-radius-ss: var(--radius-box);
        }
      }
    }
  }
  .tw\:dui-btn-outline {
    &:not( .tw\:dui-btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled, :checked ) {
      --dui-btn-shadow: "";
      --dui-btn-bg: #0000;
      --dui-btn-fg: var(--dui-btn-color);
      --dui-btn-border: var(--dui-btn-color);
      --dui-btn-noise: none;
    }
    @media (hover: none) {
      &:hover:not( .tw\:dui-btn-active, :active, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled, :checked ) {
        --dui-btn-shadow: "";
        --dui-btn-bg: #0000;
        --dui-btn-fg: var(--dui-btn-color);
        --dui-btn-border: var(--dui-btn-color);
        --dui-btn-noise: none;
      }
    }
  }
  .tw\:dui-btn-soft {
    &:not(.tw\:dui-btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled) {
      --dui-btn-shadow: "";
      --dui-btn-fg: var(--dui-btn-color, var(--color-base-content));
      --dui-btn-bg: var(--dui-btn-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-bg: color-mix(
      in oklab,
      var(--dui-btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
      }
      --dui-btn-border: var(--dui-btn-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        --dui-btn-border: color-mix(
      in oklab,
      var(--dui-btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
      }
      --dui-btn-noise: none;
    }
    @media (hover: none) {
      &:hover:not(.tw\:dui-btn-active, :active, :focus-visible, :disabled, [disabled], .tw\:dui-btn-disabled) {
        --dui-btn-shadow: "";
        --dui-btn-fg: var(--dui-btn-color, var(--color-base-content));
        --dui-btn-bg: var(--dui-btn-color, var(--color-base-content));
        @supports (color: color-mix(in lab, red, red)) {
          --dui-btn-bg: color-mix(
        in oklab,
        var(--dui-btn-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
        }
        --dui-btn-border: var(--dui-btn-color, var(--color-base-content));
        @supports (color: color-mix(in lab, red, red)) {
          --dui-btn-border: color-mix(
        in oklab,
        var(--dui-btn-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
        }
        --dui-btn-noise: none;
      }
    }
  }
  .tw\:dui-indicator-end {
    --dui-indicator-s: auto;
    --dui-indicator-e: 0;
    --dui-indicator-x: 50%;
    [dir="rtl"] & {
      --dui-indicator-s: 0;
      --dui-indicator-e: auto;
      --dui-indicator-x: -50%;
    }
  }
  .tw\:dui-indicator-start {
    --dui-indicator-s: 0;
    --dui-indicator-e: auto;
    --dui-indicator-x: -50%;
    [dir="rtl"] & {
      --dui-indicator-s: auto;
      --dui-indicator-e: 0;
      --dui-indicator-x: 50%;
    }
  }
  .tw\:dui-indicator-center {
    --dui-indicator-s: 50%;
    --dui-indicator-e: 50%;
    --dui-indicator-x: -50%;
    [dir="rtl"] & {
      --dui-indicator-x: 50%;
    }
  }
  .tw\:dui-btn-lg {
    --dui-fontsize: 1.125rem;
    --dui-btn-p: 1.25rem;
    --dui-size: calc(var(--size-field, 0.25rem) * 12);
  }
  .tw\:dui-btn-md {
    --dui-fontsize: 0.875rem;
    --dui-btn-p: 1rem;
    --dui-size: calc(var(--size-field, 0.25rem) * 10);
  }
  .tw\:dui-btn-sm {
    --dui-fontsize: 0.75rem;
    --dui-btn-p: 0.75rem;
    --dui-size: calc(var(--size-field, 0.25rem) * 8);
  }
  .tw\:dui-btn-xl {
    --dui-fontsize: 1.375rem;
    --dui-btn-p: 1.5rem;
    --dui-size: calc(var(--size-field, 0.25rem) * 14);
  }
  .tw\:dui-btn-xs {
    --dui-fontsize: 0.6875rem;
    --dui-btn-p: 0.5rem;
    --dui-size: calc(var(--size-field, 0.25rem) * 6);
  }
  .tw\:dui-card-lg {
    .tw\:dui-card-body {
      --dui-card-p: 2rem;
      --dui-card-fs: 1rem;
    }
    .tw\:dui-card-title {
      --dui-cardtitle-fs: 1.25rem;
    }
  }
  .tw\:dui-card-md {
    .tw\:dui-card-body {
      --dui-card-p: 1.5rem;
      --dui-card-fs: 0.875rem;
    }
    .tw\:dui-card-title {
      --dui-cardtitle-fs: 1.125rem;
    }
  }
  .tw\:dui-card-sm {
    .tw\:dui-card-body {
      --dui-card-p: 1rem;
      --dui-card-fs: 0.75rem;
    }
    .tw\:dui-card-title {
      --dui-cardtitle-fs: 1rem;
    }
  }
  .tw\:dui-card-xl {
    .tw\:dui-card-body {
      --dui-card-p: 2.5rem;
      --dui-card-fs: 1.125rem;
    }
    .tw\:dui-card-title {
      --dui-cardtitle-fs: 1.375rem;
    }
  }
  .tw\:dui-card-xs {
    .tw\:dui-card-body {
      --dui-card-p: 0.5rem;
      --dui-card-fs: 0.6875rem;
    }
    .tw\:dui-card-title {
      --dui-cardtitle-fs: 0.875rem;
    }
  }
  .tw\:dui-indicator-bottom {
    --dui-indicator-t: auto;
    --dui-indicator-b: 0;
    --dui-indicator-y: 50%;
  }
  .tw\:dui-indicator-middle {
    --dui-indicator-t: 50%;
    --dui-indicator-b: 50%;
    --dui-indicator-y: -50%;
  }
  .tw\:dui-indicator-top {
    --dui-indicator-t: 0;
    --dui-indicator-b: auto;
    --dui-indicator-y: -50%;
  }
  .tw\:dui-badge-accent {
    --dui-badge-color: var(--color-accent);
    --dui-badge-fg: var(--color-accent-content);
  }
  .tw\:dui-badge-error {
    --dui-badge-color: var(--color-error);
    --dui-badge-fg: var(--color-error-content);
  }
  .tw\:dui-badge-info {
    --dui-badge-color: var(--color-info);
    --dui-badge-fg: var(--color-info-content);
  }
  .tw\:dui-badge-neutral {
    --dui-badge-color: var(--color-neutral);
    --dui-badge-fg: var(--color-neutral-content);
  }
  .tw\:dui-badge-primary {
    --dui-badge-color: var(--color-primary);
    --dui-badge-fg: var(--color-primary-content);
  }
  .tw\:dui-badge-secondary {
    --dui-badge-color: var(--color-secondary);
    --dui-badge-fg: var(--color-secondary-content);
  }
  .tw\:dui-badge-success {
    --dui-badge-color: var(--color-success);
    --dui-badge-fg: var(--color-success-content);
  }
  .tw\:dui-badge-warning {
    --dui-badge-color: var(--color-warning);
    --dui-badge-fg: var(--color-warning-content);
  }
  .tw\:dui-btn-accent {
    --dui-btn-color: var(--color-accent);
    --dui-btn-fg: var(--color-accent-content);
  }
  .tw\:dui-btn-error {
    --dui-btn-color: var(--color-error);
    --dui-btn-fg: var(--color-error-content);
  }
  .tw\:dui-btn-info {
    --dui-btn-color: var(--color-info);
    --dui-btn-fg: var(--color-info-content);
  }
  .tw\:dui-btn-neutral {
    --dui-btn-color: var(--color-neutral);
    --dui-btn-fg: var(--color-neutral-content);
  }
  .tw\:dui-btn-primary {
    --dui-btn-color: var(--color-primary);
    --dui-btn-fg: var(--color-primary-content);
  }
  .tw\:dui-btn-secondary {
    --dui-btn-color: var(--color-secondary);
    --dui-btn-fg: var(--color-secondary-content);
  }
  .tw\:dui-btn-success {
    --dui-btn-color: var(--color-success);
    --dui-btn-fg: var(--color-success-content);
  }
  .tw\:dui-btn-warning {
    --dui-btn-color: var(--color-warning);
    --dui-btn-fg: var(--color-warning-content);
  }
  .tw\:dui-timeline-snap-icon {
     > li {
      --dui-timeline-col-start: 0.5rem;
      --dui-timeline-row-start: minmax(0, 1fr);
    }
  }
  .tw\:dui-input-accent {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-accent);
    }
  }
  .tw\:dui-input-error {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-error);
    }
  }
  .tw\:dui-input-info {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-info);
    }
  }
  .tw\:dui-input-neutral {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-neutral);
    }
  }
  .tw\:dui-input-primary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-primary);
    }
  }
  .tw\:dui-input-secondary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-secondary);
    }
  }
  .tw\:dui-input-success {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-success);
    }
  }
  .tw\:dui-input-warning {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-warning);
    }
  }
  .tw\:dui-radio-accent {
    --dui-input-color: var(--color-accent);
  }
  .tw\:dui-radio-error {
    --dui-input-color: var(--color-error);
  }
  .tw\:dui-radio-info {
    --dui-input-color: var(--color-info);
  }
  .tw\:dui-radio-neutral {
    --dui-input-color: var(--color-neutral);
  }
  .tw\:dui-radio-primary {
    --dui-input-color: var(--color-primary);
  }
  .tw\:dui-radio-secondary {
    --dui-input-color: var(--color-secondary);
  }
  .tw\:dui-radio-success {
    --dui-input-color: var(--color-success);
  }
  .tw\:dui-radio-warning {
    --dui-input-color: var(--color-warning);
  }
  .tw\:dui-range-lg {
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 7);
  }
  .tw\:dui-range-md {
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
  }
  .tw\:dui-range-sm {
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 5);
  }
  .tw\:dui-range-xl {
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 8);
  }
  .tw\:dui-range-xs {
    --dui-range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);
  }
  .tw\:dui-select-accent {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-accent);
    }
  }
  .tw\:dui-select-error {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-error);
    }
  }
  .tw\:dui-select-info {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-info);
    }
  }
  .tw\:dui-select-neutral {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-neutral);
    }
  }
  .tw\:dui-select-primary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-primary);
    }
  }
  .tw\:dui-select-secondary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-secondary);
    }
  }
  .tw\:dui-select-success {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-success);
    }
  }
  .tw\:dui-select-warning {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-warning);
    }
  }
  .tw\:dui-textarea-accent {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-accent);
    }
  }
  .tw\:dui-textarea-error {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-error);
    }
  }
  .tw\:dui-textarea-info {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-info);
    }
  }
  .tw\:dui-textarea-neutral {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-neutral);
    }
  }
  .tw\:dui-textarea-primary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-primary);
    }
  }
  .tw\:dui-textarea-secondary {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-secondary);
    }
  }
  .tw\:dui-textarea-success {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-success);
    }
  }
  .tw\:dui-textarea-warning {
    &, &:focus, &:focus-within {
      --dui-input-color: var(--color-warning);
    }
  }
  .tw\:dui-toggle-accent {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-accent);
    }
  }
  .tw\:dui-toggle-error {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-error);
    }
  }
  .tw\:dui-toggle-info {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-info);
    }
  }
  .tw\:dui-toggle-lg {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 7);
    }
  }
  .tw\:dui-toggle-md {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .tw\:dui-toggle-neutral {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-neutral);
    }
  }
  .tw\:dui-toggle-primary {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-primary);
    }
  }
  .tw\:dui-toggle-secondary {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-secondary);
    }
  }
  .tw\:dui-toggle-sm {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 5);
    }
  }
  .tw\:dui-toggle-success {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-success);
    }
  }
  .tw\:dui-toggle-warning {
    &:checked, &[aria-checked="true"] {
      --dui-input-color: var(--color-warning);
    }
  }
  .tw\:dui-toggle-xl {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .tw\:dui-toggle-xs {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --dui-size: calc(var(--size-selector, 0.25rem) * 4);
    }
  }
}
:root {
  --color-gray-200: #e5e7eb;
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cupcake]:checked),[data-theme=cupcake] {
    color-scheme: light;
    --color-base-100: oklch(97.788% 0.004 56.375);
    --color-base-200: oklch(93.982% 0.007 61.449);
    --color-base-300: oklch(91.586% 0.006 53.44);
    --color-base-content: oklch(23.574% 0.066 313.189);
    --color-primary: oklch(85% 0.138 181.071);
    --color-primary-content: oklch(43% 0.078 188.216);
    --color-secondary: oklch(89% 0.061 343.231);
    --color-secondary-content: oklch(45% 0.187 3.815);
    --color-accent: oklch(90% 0.076 70.697);
    --color-accent-content: oklch(47% 0.157 37.304);
    --color-neutral: oklch(27% 0.006 286.033);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(68% 0.169 237.323);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(69% 0.17 162.48);
    --color-success-content: oklch(26% 0.051 172.552);
    --color-warning: oklch(79% 0.184 86.047);
    --color-warning-content: oklch(28% 0.066 53.813);
    --color-error: oklch(64% 0.246 16.439);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cmyk]:checked),[data-theme=cmyk] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(95% 0 0);
    --color-base-300: oklch(90% 0 0);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(71.772% 0.133 239.443);
    --color-primary-content: oklch(14.354% 0.026 239.443);
    --color-secondary: oklch(64.476% 0.202 359.339);
    --color-secondary-content: oklch(12.895% 0.04 359.339);
    --color-accent: oklch(94.228% 0.189 105.306);
    --color-accent-content: oklch(18.845% 0.037 105.306);
    --color-neutral: oklch(21.778% 0 0);
    --color-neutral-content: oklch(84.355% 0 0);
    --color-info: oklch(68.475% 0.094 217.284);
    --color-info-content: oklch(13.695% 0.018 217.284);
    --color-success: oklch(46.949% 0.162 321.406);
    --color-success-content: oklch(89.389% 0.032 321.406);
    --color-warning: oklch(71.236% 0.159 52.023);
    --color-warning-content: oklch(14.247% 0.031 52.023);
    --color-error: oklch(62.013% 0.208 28.717);
    --color-error-content: oklch(12.402% 0.041 28.717);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=pastel]:checked),[data-theme=pastel] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98.462% 0.001 247.838);
    --color-base-300: oklch(92.462% 0.001 247.838);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(90% 0.063 306.703);
    --color-primary-content: oklch(49% 0.265 301.924);
    --color-secondary: oklch(89% 0.058 10.001);
    --color-secondary-content: oklch(51% 0.222 16.935);
    --color-accent: oklch(90% 0.093 164.15);
    --color-accent-content: oklch(50% 0.118 165.612);
    --color-neutral: oklch(55% 0.046 257.417);
    --color-neutral-content: oklch(92% 0.013 255.508);
    --color-info: oklch(86% 0.127 207.078);
    --color-info-content: oklch(52% 0.105 223.128);
    --color-success: oklch(87% 0.15 154.449);
    --color-success-content: oklch(52% 0.154 150.069);
    --color-warning: oklch(83% 0.128 66.29);
    --color-warning-content: oklch(55% 0.195 38.402);
    --color-error: oklch(80% 0.114 19.571);
    --color-error-content: oklch(50% 0.213 27.518);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root {
    --dui-fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--dui-root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root:has( .dui-modal-open, .dui-modal[open], .dui-modal:target, .dui-modal-toggle:checked, .dui-drawer:not([class*="drawer-open"]) > .dui-drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :where( :root:has( .dui-modal-open, .dui-modal[open], .dui-modal:target, .dui-modal-toggle:checked, .dui-drawer:not(.dui-drawer-open) > .dui-drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --dui-root-bg: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --dui-root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.dui-modal[open], .dui-modal-open, .dui-modal-toggle:checked + .dui-modal):not(.dui-modal-start, .dui-modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=daisyui_default]:checked),[data-theme="daisyui_default"] {
    color-scheme: normal;
  }
}
@layer base {
  :root:has(input.theme-controller[value=daisyui_leaf]:checked),[data-theme="daisyui_leaf"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% .006 285.885);
    --color-primary: oklch(68.628% 0.185 148.958);
    --color-primary-content: oklch(0% 0 0);
    --color-secondary: oklch(69.776% 0.135 168.327);
    --color-secondary-content: oklch(13.955% 0.027 168.327);
    --color-accent: oklch(70.628% 0.119 185.713);
    --color-accent-content: oklch(14.125% 0.023 185.713);
    --color-neutral: oklch(30.698% 0.039 171.364);
    --color-neutral-content: oklch(86.139% 0.007 171.364);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
