import {
  Component,
  ContentChild,
  Input,
  TemplateRef
} from '@angular/core';
  
  @Component({
    selector: 'tabs-template',
    standalone: false,
    template: `
      <ul class="nav nav-tabs">
        <li class="nav-item" *ngFor="let item of itemsArray; let i = index">
          <a
            class="nav-link"
            [ngClass]="{ active: selectedTab === i }"
            (click)="selectTab(i)"
          >
            <ng-container
              *ngTemplateOutlet="titleTemplate; context: { $implicit: item }"
            ></ng-container>
          </a>
        </li>
      </ul>
      <div class="tab-content mt-3">
        <ng-container *ngFor="let item of itemsArray; let i = index">
          <div
            class="tab-pane fade"
            [ngClass]="{ 'show active': selectedTab === i }"
          >
            <ng-container
              *ngTemplateOutlet="contentTemplate; context: { $implicit: item }"
            ></ng-container>
          </div>
        </ng-container>
      </div>
    `,
    styles: [
      `
        .nav-link {
          cursor: pointer;
        }
      `
    ],
  })
  export class TabsTemplateComponent {
    @Input() itemsArray: any[] = [];
    @Input() selectedTab: number = 0;
  
    @ContentChild('tabTitle', { static: true }) titleTemplate!: TemplateRef<any>;
    @ContentChild('tabContent', { static: true }) contentTemplate!: TemplateRef<any>;
  
    selectTab(index: number) {
      this.selectedTab = index;
    }
  }
  